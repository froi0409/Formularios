
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.froi.pruebasgramaticas;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\073\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\003\013\000\002\005\010\000\002\005\010" +
    "\000\002\005\010\000\002\005\010\000\002\005\010\000" +
    "\002\005\004\000\002\005\004\000\002\005\004\000\002" +
    "\005\004\000\002\005\004\000\002\005\004\000\002\006" +
    "\004\000\002\006\004\000\002\006\004\000\002\006\003" +
    "\000\002\007\004\000\002\010\004\000\002\011\005\000" +
    "\002\011\003\000\002\024\005\000\002\031\005\000\002" +
    "\031\003\000\002\036\005\000\002\036\005\000\002\012" +
    "\005\000\002\012\003\000\002\025\005\000\002\032\005" +
    "\000\002\032\003\000\002\037\005\000\002\037\005\000" +
    "\002\037\005\000\002\037\005\000\002\013\005\000\002" +
    "\013\003\000\002\026\005\000\002\040\005\000\002\014" +
    "\005\000\002\014\003\000\002\027\005\000\002\034\005" +
    "\000\002\034\003\000\002\041\005\000\002\041\005\000" +
    "\002\017\005\000\002\017\003\000\002\030\005\000\002" +
    "\035\005\000\002\035\003\000\002\042\005\000\002\042" +
    "\005\000\002\042\005\000\002\042\005\000\002\042\005" +
    "\000\002\042\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\230\000\004\004\004\001\002\000\004\007\011\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\000\001\002" +
    "\000\004\002\010\001\002\000\004\002\001\001\002\000" +
    "\004\033\012\001\002\000\004\010\013\001\002\000\030" +
    "\035\024\041\015\045\014\046\017\056\020\057\026\060" +
    "\021\062\025\077\016\100\023\101\022\001\002\000\006" +
    "\003\035\005\034\001\002\000\006\003\035\005\034\001" +
    "\002\000\006\003\035\005\034\001\002\000\006\003\035" +
    "\005\034\001\002\000\006\003\035\005\034\001\002\000" +
    "\006\003\035\005\034\001\002\000\006\003\035\005\034" +
    "\001\002\000\006\003\035\005\034\001\002\000\006\003" +
    "\035\005\034\001\002\000\006\003\035\005\034\001\002" +
    "\000\006\003\035\005\034\001\002\000\004\004\030\001" +
    "\002\000\004\034\031\001\002\000\004\007\032\001\002" +
    "\000\004\005\033\001\002\000\004\002\ufffe\001\002\000" +
    "\006\003\067\020\070\001\002\000\012\004\uffef\020\066" +
    "\036\uffef\061\uffef\001\002\000\004\036\037\001\002\000" +
    "\004\010\040\001\002\000\004\012\065\001\002\000\004" +
    "\020\044\001\002\000\004\013\063\001\002\000\006\013" +
    "\uffd7\014\060\001\002\000\006\037\045\040\050\001\002" +
    "\000\004\010\056\001\002\000\004\021\055\001\002\000" +
    "\006\014\053\021\uffd4\001\002\000\004\010\051\001\002" +
    "\000\004\030\052\001\002\000\006\014\uffd2\021\uffd2\001" +
    "\002\000\006\037\045\040\050\001\002\000\004\021\uffd5" +
    "\001\002\000\006\013\uffd6\014\uffd6\001\002\000\004\023" +
    "\057\001\002\000\006\014\uffd3\021\uffd3\001\002\000\004" +
    "\020\044\001\002\000\004\013\uffd8\001\002\000\004\004" +
    "\ufffa\001\002\000\004\021\064\001\002\000\004\004\uffed" +
    "\001\002\000\004\020\uffee\001\002\000\010\004\ufff1\036" +
    "\ufff1\061\ufff1\001\002\000\010\004\ufff0\036\ufff0\061\ufff0" +
    "\001\002\000\010\004\ufff2\036\ufff2\061\ufff2\001\002\000" +
    "\004\004\ufff6\001\002\000\004\036\073\001\002\000\004" +
    "\010\040\001\002\000\004\020\077\001\002\000\004\013" +
    "\063\001\002\000\006\013\uffeb\014\113\001\002\000\006" +
    "\037\101\040\103\001\002\000\004\021\112\001\002\000" +
    "\004\010\110\001\002\000\006\014\106\021\uffe8\001\002" +
    "\000\004\010\104\001\002\000\004\027\105\001\002\000" +
    "\006\014\uffe6\021\uffe6\001\002\000\006\037\101\040\103" +
    "\001\002\000\004\021\uffe9\001\002\000\004\023\111\001" +
    "\002\000\006\014\uffe7\021\uffe7\001\002\000\006\013\uffea" +
    "\014\uffea\001\002\000\004\020\077\001\002\000\004\013" +
    "\uffec\001\002\000\004\004\ufffd\001\002\000\004\004\ufff4" +
    "\001\002\000\004\004\ufff3\001\002\000\004\004\ufff7\001" +
    "\002\000\004\004\ufff8\001\002\000\004\061\123\001\002" +
    "\000\004\010\040\001\002\000\004\020\127\001\002\000" +
    "\004\013\063\001\002\000\006\013\uffd0\014\157\001\002" +
    "\000\016\047\130\050\132\051\136\052\131\053\137\055" +
    "\135\001\002\000\004\010\155\001\002\000\004\010\153" +
    "\001\002\000\004\010\151\001\002\000\004\021\150\001" +
    "\002\000\006\014\146\021\uffcd\001\002\000\004\010\144" +
    "\001\002\000\004\010\142\001\002\000\004\010\140\001" +
    "\002\000\004\023\141\001\002\000\006\014\uffc8\021\uffc8" +
    "\001\002\000\004\030\143\001\002\000\006\014\uffca\021" +
    "\uffca\001\002\000\004\025\145\001\002\000\006\014\uffc7" +
    "\021\uffc7\001\002\000\016\047\130\050\132\051\136\052" +
    "\131\053\137\055\135\001\002\000\004\021\uffce\001\002" +
    "\000\006\013\uffcf\014\uffcf\001\002\000\004\027\152\001" +
    "\002\000\006\014\uffcb\021\uffcb\001\002\000\004\026\154" +
    "\001\002\000\006\014\uffc9\021\uffc9\001\002\000\004\022" +
    "\156\001\002\000\006\014\uffcc\021\uffcc\001\002\000\004" +
    "\020\127\001\002\000\004\013\uffd1\001\002\000\004\004" +
    "\ufff9\001\002\000\004\004\ufff5\001\002\000\004\036\164" +
    "\001\002\000\004\010\040\001\002\000\004\020\170\001" +
    "\002\000\006\013\uffe4\014\213\001\002\000\004\013\063" +
    "\001\002\000\012\042\171\043\174\044\173\054\175\001" +
    "\002\000\004\010\210\001\002\000\004\021\207\001\002" +
    "\000\004\010\205\001\002\000\004\010\203\001\002\000" +
    "\004\010\201\001\002\000\006\014\177\021\uffe1\001\002" +
    "\000\012\042\171\043\174\044\173\054\175\001\002\000" +
    "\004\021\uffe2\001\002\000\004\023\202\001\002\000\006" +
    "\014\uffdf\021\uffdf\001\002\000\004\027\204\001\002\000" +
    "\006\014\uffde\021\uffde\001\002\000\004\025\206\001\002" +
    "\000\006\014\uffdd\021\uffdd\001\002\000\006\013\uffe3\014" +
    "\uffe3\001\002\000\004\023\211\001\002\000\006\014\uffe0" +
    "\021\uffe0\001\002\000\004\004\ufffc\001\002\000\004\020" +
    "\170\001\002\000\004\013\uffe5\001\002\000\004\036\216" +
    "\001\002\000\004\010\040\001\002\000\004\020\222\001" +
    "\002\000\004\013\063\001\002\000\006\013\uffdb\014\230" +
    "\001\002\000\004\037\224\001\002\000\004\021\227\001" +
    "\002\000\004\010\225\001\002\000\004\023\226\001\002" +
    "\000\004\021\uffd9\001\002\000\006\013\uffda\014\uffda\001" +
    "\002\000\004\020\222\001\002\000\004\013\uffdc\001\002" +
    "\000\004\004\ufffb\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\230\000\010\002\006\003\005\004\004\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\026\001\001\000\004\006\214\001\001" +
    "\000\004\006\162\001\001\000\004\006\161\001\001\000" +
    "\004\006\121\001\001\000\004\006\120\001\001\000\004" +
    "\006\117\001\001\000\004\006\116\001\001\000\004\006" +
    "\115\001\001\000\004\006\071\001\001\000\004\006\070" +
    "\001\001\000\004\006\035\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\040\001\001\000\002\001\001\000\006" +
    "\014\041\027\042\001\001\000\004\010\061\001\001\000" +
    "\002\001\001\000\006\034\045\041\046\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\034\053" +
    "\041\046\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\014\060\027\042" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\073\001\001\000\006\011\074" +
    "\024\075\001\001\000\004\010\114\001\001\000\002\001" +
    "\001\000\006\031\077\036\101\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\031\106\036\101" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\011\113\024\075\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\123\001\001\000\006\017\124\030" +
    "\125\001\001\000\004\010\160\001\001\000\002\001\001" +
    "\000\006\035\132\042\133\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\035\146\042\133\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\017\157\030\125\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\164\001\001\000\006\012\166\025\165\001\001\000" +
    "\002\001\001\000\004\010\211\001\001\000\006\032\171" +
    "\037\175\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\032\177\037\175\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\012\213\025\165\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\007\216\001\001\000\006" +
    "\013\217\026\220\001\001\000\004\010\231\001\001\000" +
    "\002\001\001\000\004\040\222\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\013\230\026\220\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public void report_error(String message, Object info) {
        System.out.println("reporterror");
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal " + info);
    }
    @Override
    public void syntax_error(Symbol s) {
        System.out.println("linea: " + s.left + "   columna: " + s.right);
    }
    protected int error_sync_size() {
        return 1;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= solicitudes 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // tipo_solicitud ::= CREAR_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_creacion_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("CREACION DE USUARIO"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // tipo_solicitud ::= MODIFICAR_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_modificacion_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("MODIFICACION DE USUARIO"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // tipo_solicitud ::= ELIMINAR_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_eliminacion_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("ELIMINACION DE USUARIO"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // tipo_solicitud ::= LOGIN_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_login_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("LOGIN USUARIO"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // tipo_solicitud ::= NUEVO_FORMULARIO apertura_instruccion_principal1 PARAMETROS_FORMULARIO apertura_instruccion_principal2 instruccion_nuevo_formulario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("NUEVO FORMULARIO"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // tipo_solicitud ::= ELIMINAR_FORMULARIO apertura_instruccion_principal1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // tipo_solicitud ::= MODIFICAR_FORMULARIO apertura_instruccion_principal1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // tipo_solicitud ::= AGREGAR_COMPONENTE apertura_instruccion_principal1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // tipo_solicitud ::= ELIMINAR_COMPONENTE apertura_instruccion_principal1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // tipo_solicitud ::= MODIFICAR_COMPONENTE apertura_instruccion_principal1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // tipo_solicitud ::= CONSULTAR_DATOS apertura_instruccion_principal1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // apertura_instruccion_principal1 ::= MAYOR_QUE LLAVE_A 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // apertura_instruccion_principal1 ::= error LLAVE_A 
            {
              Object RESULT =null;
		 System.out.println("Falta >"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // apertura_instruccion_principal1 ::= MAYOR_QUE error 
            {
              Object RESULT =null;
		 System.out.println("Falta {"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // apertura_instruccion_principal1 ::= error 
            {
              Object RESULT =null;
		 System.out.println("Error en la expresion"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // apertura_instruccion_principal2 ::= PUNTOS CORCHETE_A 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // cierre_instruccion_principal ::= CORCHETE_C LLAVE_C 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cierre_instruccion_principal",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // instruccion_creacion_usuario ::= accion_crear_usuario COMA instruccion_creacion_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_creacion_usuario",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // instruccion_creacion_usuario ::= accion_crear_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_creacion_usuario",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // accion_crear_usuario ::= LLAVE_A accion_crear_usuario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // accion_crear_usuario_p ::= opciones_crear_usuario COMA accion_crear_usuario_p 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario_p",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // accion_crear_usuario_p ::= opciones_crear_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario_p",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // opciones_crear_usuario ::= USUARIO PUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // opciones_crear_usuario ::= PASSWORD PUNTOS ALLCHARACTERS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // instruccion_modificacion_usuario ::= accion_modificacion_usuario COMA instruccion_modificacion_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // instruccion_modificacion_usuario ::= accion_modificacion_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // accion_modificacion_usuario ::= LLAVE_A accion_modificacion_usuario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // accion_modificacion_usuario_p ::= opciones_modificacion_usuario COMA accion_modificacion_usuario_p 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario_p",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // accion_modificacion_usuario_p ::= opciones_modificacion_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario_p",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // opciones_modificacion_usuario ::= USUARIO_ANTIGUO PUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // opciones_modificacion_usuario ::= USUARIO_NUEVO PUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // opciones_modificacion_usuario ::= NUEVO_PASSWORD PUNTOS ALLCHARACTERS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // opciones_modificacion_usuario ::= FECHA_MODIFICACION PUNTOS FECHA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // instruccion_eliminacion_usuario ::= accion_eliminacion_usuario COMA instruccion_eliminacion_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_usuario",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // instruccion_eliminacion_usuario ::= accion_eliminacion_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_usuario",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // accion_eliminacion_usuario ::= LLAVE_A opciones_eliminacion_usuario LLAVE_C 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_usuario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // opciones_eliminacion_usuario ::= USUARIO PUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // instruccion_login_usuario ::= accion_login_usuario COMA instruccion_login_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_login_usuario",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // instruccion_login_usuario ::= accion_login_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_login_usuario",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // accion_login_usuario ::= LLAVE_A accion_login_usuario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_login_usuario",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // accion_login_usuario_p ::= opciones_login_usuario COMA accion_login_usuario_p 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_login_usuario_p",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // accion_login_usuario_p ::= opciones_login_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_login_usuario_p",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // opciones_login_usuario ::= USUARIO PUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // opciones_login_usuario ::= PASSWORD PUNTOS ALLCHARACTERSNOSPACE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // instruccion_nuevo_formulario ::= accion_nuevo_formulario COMA instruccion_nuevo_formulario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_nuevo_formulario",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // instruccion_nuevo_formulario ::= accion_nuevo_formulario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("instruccion_nuevo_formulario",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // accion_nuevo_formulario ::= LLAVE_A accion_nuevo_formulario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // accion_nuevo_formulario_p ::= opciones_nuevo_formulario COMA accion_nuevo_formulario_p 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario_p",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // accion_nuevo_formulario_p ::= opciones_nuevo_formulario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario_p",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // opciones_nuevo_formulario ::= ID PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // opciones_nuevo_formulario ::= TITULO PUNTOS ALLCHARACTERS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // opciones_nuevo_formulario ::= NOMBRE PUNTOS ALLCHARACTERSNOSPACE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // opciones_nuevo_formulario ::= TEMA PUNTOS THEME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // opciones_nuevo_formulario ::= USUARIO_CREACION PUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // opciones_nuevo_formulario ::= FECHA_CREACION PUNTOS FECHA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
