
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.froi.formulariosweb.analizadores.codigoindigo;

import com.froi.formulariosweb.entidades.*;
import java_cup.runtime.*;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserSolicitudes extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserSolicitudesSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserSolicitudes() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserSolicitudes(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserSolicitudes(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u015e\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\004\007\000\002\004\007\000\002\004\007" +
    "\000\002\004\007\000\002\004\007\000\002\004\004\000" +
    "\002\032\004\000\002\032\006\000\002\032\006\000\002" +
    "\032\006\000\002\032\006\000\002\032\006\000\002\032" +
    "\003\000\002\003\013\000\002\003\013\000\002\003\013" +
    "\000\002\003\013\000\002\003\013\000\002\003\010\000" +
    "\002\003\013\000\002\003\013\000\002\003\013\000\002" +
    "\003\013\000\002\003\010\000\002\005\010\000\002\005" +
    "\010\000\002\005\010\000\002\005\010\000\002\005\010" +
    "\000\002\005\010\000\002\005\010\000\002\005\010\000" +
    "\002\005\010\000\002\005\010\000\002\005\010\000\002" +
    "\006\004\000\002\006\004\000\002\006\004\000\002\006" +
    "\003\000\002\007\004\000\002\007\004\000\002\007\004" +
    "\000\002\007\003\000\002\010\004\000\002\010\004\000" +
    "\002\010\004\000\002\010\003\000\002\017\005\000\002" +
    "\017\003\000\002\036\005\000\002\036\005\000\002\036" +
    "\005\000\002\051\005\000\002\051\003\000\002\064\005" +
    "\000\002\064\005\000\002\064\005\000\002\064\004\000" +
    "\002\064\005\000\002\064\005\000\002\064\005\000\002" +
    "\064\004\000\002\064\005\000\002\064\005\000\002\064" +
    "\004\000\002\064\005\000\002\064\005\000\002\064\004" +
    "\000\002\064\003\000\002\020\005\000\002\020\003\000" +
    "\002\037\005\000\002\037\005\000\002\037\005\000\002" +
    "\052\005\000\002\052\003\000\002\065\005\000\002\065" +
    "\005\000\002\065\005\000\002\065\005\000\002\065\004" +
    "\000\002\065\005\000\002\065\005\000\002\065\005\000" +
    "\002\065\004\000\002\065\005\000\002\065\005\000\002" +
    "\065\004\000\002\065\003\000\002\021\005\000\002\021" +
    "\003\000\002\040\005\000\002\040\005\000\002\040\005" +
    "\000\002\066\005\000\002\066\004\000\002\066\005\000" +
    "\002\066\005\000\002\066\005\000\002\066\004\000\002" +
    "\066\003\000\002\022\005\000\002\022\003\000\002\041" +
    "\005\000\002\041\005\000\002\041\005\000\002\054\005" +
    "\000\002\054\003\000\002\067\005\000\002\067\005\000" +
    "\002\067\004\000\002\067\005\000\002\067\005\000\002" +
    "\067\005\000\002\067\004\000\002\067\005\000\002\067" +
    "\005\000\002\067\004\000\002\067\003\000\002\025\005" +
    "\000\002\025\003\000\002\042\005\000\002\042\005\000" +
    "\002\042\005\000\002\055\005\000\002\055\003\000\002" +
    "\070\005\000\002\070\005\000\002\070\005\000\002\070" +
    "\005\000\002\070\005\000\002\070\005\000\002\070\004" +
    "\000\002\070\005\000\002\070\005\000\002\070\005\000" +
    "\002\070\004\000\002\070\005\000\002\070\005\000\002" +
    "\070\004\000\002\070\005\000\002\070\005\000\002\070" +
    "\004\000\002\070\005\000\002\070\005\000\002\070\004" +
    "\000\002\070\005\000\002\070\005\000\002\070\004\000" +
    "\002\070\005\000\002\070\005\000\002\070\004\000\002" +
    "\070\003\000\002\014\003\000\002\014\003\000\002\031" +
    "\005\000\002\031\003\000\002\043\005\000\002\043\005" +
    "\000\002\043\005\000\002\056\005\000\002\056\003\000" +
    "\002\071\005\000\002\071\005\000\002\071\004\000\002" +
    "\071\005\000\002\071\005\000\002\071\004\000\002\071" +
    "\003\000\002\023\005\000\002\023\003\000\002\044\005" +
    "\000\002\044\005\000\002\044\005\000\002\057\005\000" +
    "\002\057\003\000\002\072\005\000\002\072\005\000\002" +
    "\072\005\000\002\072\005\000\002\072\005\000\002\072" +
    "\004\000\002\072\005\000\002\072\005\000\002\072\004" +
    "\000\002\072\005\000\002\072\005\000\002\072\004\000" +
    "\002\072\005\000\002\072\005\000\002\072\004\000\002" +
    "\072\005\000\002\072\005\000\002\072\004\000\002\072" +
    "\003\000\002\024\005\000\002\024\003\000\002\045\005" +
    "\000\002\045\005\000\002\045\005\000\002\060\005\000" +
    "\002\060\003\000\002\073\005\000\002\073\005\000\002" +
    "\073\005\000\002\073\005\000\002\073\005\000\002\073" +
    "\005\000\002\073\005\000\002\073\005\000\002\073\005" +
    "\000\002\073\005\000\002\073\005\000\002\073\005\000" +
    "\002\073\004\000\002\073\005\000\002\073\005\000\002" +
    "\073\004\000\002\073\005\000\002\073\005\000\002\073" +
    "\004\000\002\073\005\000\002\073\005\000\002\073\004" +
    "\000\002\073\005\000\002\073\005\000\002\073\004\000" +
    "\002\073\005\000\002\073\005\000\002\073\004\000\002" +
    "\073\005\000\002\073\005\000\002\073\004\000\002\073" +
    "\005\000\002\073\005\000\002\073\004\000\002\073\005" +
    "\000\002\073\005\000\002\073\004\000\002\073\005\000" +
    "\002\073\005\000\002\073\004\000\002\073\005\000\002" +
    "\073\005\000\002\073\004\000\002\073\005\000\002\073" +
    "\005\000\002\073\004\000\002\073\003\000\002\011\003" +
    "\000\002\011\003\000\002\011\003\000\002\011\003\000" +
    "\002\011\003\000\002\011\003\000\002\011\003\000\002" +
    "\011\003\000\002\013\003\000\002\013\003\000\002\013" +
    "\003\000\002\013\003\000\002\012\003\000\002\012\003" +
    "\000\002\026\005\000\002\026\003\000\002\046\005\000" +
    "\002\046\005\000\002\046\005\000\002\061\005\000\002" +
    "\061\003\000\002\074\005\000\002\074\005\000\002\074" +
    "\005\000\002\074\004\000\002\074\005\000\002\074\005" +
    "\000\002\074\004\000\002\074\005\000\002\074\005\000" +
    "\002\074\004\000\002\074\003\000\002\027\005\000\002" +
    "\027\003\000\002\047\005\000\002\047\005\000\002\047" +
    "\005\000\002\062\005\000\002\062\003\000\002\075\005" +
    "\000\002\075\003\000\002\075\005\000\002\075\005\000" +
    "\002\075\004\000\002\030\005\000\002\030\003\000\002" +
    "\050\005\000\002\050\005\000\002\050\005\000\002\063" +
    "\005\000\002\063\003\000\002\076\005\000\002\076\005" +
    "\000\002\076\005\000\002\035\013\000\002\035\013\000" +
    "\002\035\013\000\002\035\013\000\002\035\013\000\002" +
    "\035\013\000\002\035\013\000\002\035\013\000\002\077" +
    "\005\000\002\077\003\000\002\077\002\000\002\100\005" +
    "\000\002\100\005\000\002\100\005\000\002\100\005\000" +
    "\002\101\006\000\002\104\004\000\002\104\004\000\002" +
    "\104\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\016\003\000\002\016\003\000\002\016\003\000\002\016" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\003\000" +
    "\002\102\003\000\002\103\003\000\002\103\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02a2\000\006\003\004\004\005\001\002\000\036\003" +
    "\u025e\004\u025f\007\u02a0\053\027\057\020\063\017\064\022" +
    "\074\023\075\031\076\024\100\030\115\021\116\026\117" +
    "\025\001\002\000\006\003\013\007\012\001\002\000\004" +
    "\002\uffff\001\002\000\004\002\000\001\002\000\004\002" +
    "\011\001\002\000\004\002\001\001\002\000\010\003\u0299" +
    "\047\u0298\051\u0266\001\002\000\006\047\014\051\015\001" +
    "\002\000\004\005\u025d\001\002\000\004\010\016\001\002" +
    "\000\030\053\027\057\020\063\017\064\022\074\023\075" +
    "\031\076\024\100\030\115\021\116\026\117\025\001\002" +
    "\000\006\003\040\005\037\001\002\000\006\003\040\005" +
    "\037\001\002\000\006\003\040\005\037\001\002\000\006" +
    "\003\040\005\037\001\002\000\006\003\040\005\037\001" +
    "\002\000\006\003\040\005\037\001\002\000\006\003\040" +
    "\005\037\001\002\000\006\003\040\005\037\001\002\000" +
    "\006\003\040\005\037\001\002\000\006\003\040\005\037" +
    "\001\002\000\006\003\040\005\037\001\002\000\004\004" +
    "\033\001\002\000\004\052\034\001\002\000\004\007\035" +
    "\001\002\000\004\005\036\001\002\000\010\002\uffef\003" +
    "\uffef\004\uffef\001\002\000\006\003\135\020\136\001\002" +
    "\000\014\020\134\054\uffd8\077\uffd8\101\uffd8\120\uffd8\001" +
    "\002\000\004\054\042\001\002\000\006\003\044\010\043" +
    "\001\002\000\006\003\132\012\133\001\002\000\010\003" +
    "\uffd4\012\131\020\uffd4\001\002\000\006\003\047\020\051" +
    "\001\002\000\006\003\124\013\125\001\002\000\010\003" +
    "\052\055\053\056\056\001\002\000\010\003\uff98\013\uff98" +
    "\014\117\001\002\000\010\003\052\055\053\056\056\001" +
    "\002\000\042\003\uff88\010\114\014\uff88\021\uff88\022\077" +
    "\024\074\026\070\027\071\030\100\031\066\032\063\033" +
    "\067\034\076\035\064\037\073\040\062\001\002\000\006" +
    "\003\110\010\107\001\002\000\006\003\105\021\106\001" +
    "\002\000\010\003\uff93\014\103\021\uff93\001\002\000\006" +
    "\003\060\010\057\001\002\000\034\003\102\022\077\024" +
    "\074\026\070\027\071\030\100\031\066\032\063\033\067" +
    "\034\076\035\064\037\073\040\062\001\002\000\040\003" +
    "\uff89\014\uff89\021\uff89\022\077\024\074\026\070\027\071" +
    "\030\100\031\066\032\063\033\067\034\076\035\064\037" +
    "\073\040\062\001\002\000\010\003\uff8a\014\uff8a\021\uff8a" +
    "\001\002\000\010\003\uff64\014\uff64\021\uff64\001\002\000" +
    "\010\003\ufefd\014\ufefd\021\ufefd\001\002\000\010\003\ufefa" +
    "\014\ufefa\021\ufefa\001\002\000\010\003\ufeb6\014\ufeb6\021" +
    "\ufeb6\001\002\000\010\003\ufef8\014\ufef8\021\ufef8\001\002" +
    "\000\010\003\ufefc\014\ufefc\021\ufefc\001\002\000\010\003" +
    "\ufebc\014\ufebc\021\ufebc\001\002\000\010\003\ufebb\014\ufebb" +
    "\021\ufebb\001\002\000\010\003\ufeb8\014\ufeb8\021\ufeb8\001" +
    "\002\000\010\003\uff65\014\uff65\021\uff65\001\002\000\010" +
    "\003\ufeba\014\ufeba\021\ufeba\001\002\000\010\003\ufeb7\014" +
    "\ufeb7\021\ufeb7\001\002\000\010\003\ufefb\014\ufefb\021\ufefb" +
    "\001\002\000\010\003\ufeb9\014\ufeb9\021\ufeb9\001\002\000" +
    "\010\003\ufef9\014\ufef9\021\ufef9\001\002\000\010\003\uff91" +
    "\014\uff91\021\uff91\001\002\000\010\003\uff8b\014\uff8b\021" +
    "\uff8b\001\002\000\010\003\052\055\053\056\056\001\002" +
    "\000\006\003\uff94\021\uff94\001\002\000\010\003\uff95\013" +
    "\uff95\014\uff95\001\002\000\010\003\uff97\013\uff97\014\uff97" +
    "\001\002\000\034\003\113\022\077\024\074\026\070\027" +
    "\071\030\100\031\066\032\063\033\067\034\076\035\064" +
    "\037\073\040\062\001\002\000\040\003\uff8c\014\uff8c\021" +
    "\uff8c\022\077\024\074\026\070\027\071\030\100\031\066" +
    "\032\063\033\067\034\076\035\064\037\073\040\062\001" +
    "\002\000\010\003\uff8d\014\uff8d\021\uff8d\001\002\000\010" +
    "\003\uff92\014\uff92\021\uff92\001\002\000\010\003\uff8e\014" +
    "\uff8e\021\uff8e\001\002\000\032\022\077\024\074\026\070" +
    "\027\071\030\100\031\066\032\063\033\067\034\076\035" +
    "\064\037\073\040\062\001\002\000\010\003\uff90\014\uff90" +
    "\021\uff90\001\002\000\010\003\uff8f\014\uff8f\021\uff8f\001" +
    "\002\000\006\003\047\020\051\001\002\000\006\003\uff99" +
    "\013\uff99\001\002\000\004\021\122\001\002\000\010\003" +
    "\uff96\013\uff96\014\uff96\001\002\000\006\003\uffe3\004\uffe3" +
    "\001\002\000\010\003\uffd0\004\uffd0\021\130\001\002\000" +
    "\006\003\126\021\127\001\002\000\006\003\uffd1\004\uffd1" +
    "\001\002\000\006\003\uffd3\004\uffd3\001\002\000\006\003" +
    "\uffd2\004\uffd2\001\002\000\006\003\uffd6\020\uffd6\001\002" +
    "\000\006\003\uffd5\020\uffd5\001\002\000\006\003\uffd7\020" +
    "\uffd7\001\002\000\012\054\uffda\077\uffda\101\uffda\120\uffda" +
    "\001\002\000\012\054\uffd9\077\uffd9\101\uffd9\120\uffd9\001" +
    "\002\000\012\054\uffdb\077\uffdb\101\uffdb\120\uffdb\001\002" +
    "\000\004\101\140\001\002\000\006\003\044\010\043\001" +
    "\002\000\006\003\143\020\145\001\002\000\010\003\uff3a" +
    "\013\uff3a\014\306\001\002\000\032\003\161\065\157\102" +
    "\146\103\152\104\156\106\155\107\162\110\153\111\150" +
    "\112\147\113\154\114\160\001\002\000\006\003\124\013" +
    "\125\001\002\000\032\003\161\065\157\102\146\103\152" +
    "\104\156\106\155\107\162\110\153\111\150\112\147\113" +
    "\154\114\160\001\002\000\006\003\277\010\276\001\002" +
    "\000\006\003\272\010\271\001\002\000\006\003\265\010" +
    "\264\001\002\000\006\003\262\021\263\001\002\000\006" +
    "\003\256\010\255\001\002\000\006\003\251\010\250\001" +
    "\002\000\006\003\244\010\243\001\002\000\006\003\237" +
    "\010\236\001\002\000\006\003\222\010\221\001\002\000" +
    "\006\003\215\010\214\001\002\000\006\003\210\010\207" +
    "\001\002\000\046\003\uff06\010\176\014\uff06\021\uff06\022" +
    "\202\024\200\025\175\026\203\027\201\030\100\031\066" +
    "\032\063\033\067\034\076\035\064\036\204\037\073\040" +
    "\062\001\002\000\006\003\167\010\166\001\002\000\010" +
    "\003\uff35\014\164\021\uff35\001\002\000\032\003\161\065" +
    "\157\102\146\103\152\104\156\106\155\107\162\110\153" +
    "\111\150\112\147\113\154\114\160\001\002\000\006\003" +
    "\uff36\021\uff36\001\002\000\014\003\172\032\063\033\067" +
    "\034\076\035\064\001\002\000\020\003\uff16\014\uff16\021" +
    "\uff16\032\063\033\067\034\076\035\064\001\002\000\010" +
    "\003\uff17\014\uff17\021\uff17\001\002\000\010\003\uff2f\014" +
    "\uff2f\021\uff2f\001\002\000\010\003\uff18\014\uff18\021\uff18" +
    "\001\002\000\010\003\uff28\014\uff28\021\uff28\001\002\000" +
    "\010\003\ufeaf\014\ufeaf\021\ufeaf\001\002\000\010\003\ufeb4" +
    "\014\ufeb4\021\ufeb4\001\002\000\036\022\202\024\200\025" +
    "\175\026\203\027\201\030\100\031\066\032\063\033\067" +
    "\034\076\035\064\036\204\037\073\040\062\001\002\000" +
    "\010\003\ufeae\014\ufeae\021\ufeae\001\002\000\010\003\ufeb2" +
    "\014\ufeb2\021\ufeb2\001\002\000\010\003\ufeb3\014\ufeb3\021" +
    "\ufeb3\001\002\000\010\003\ufeb1\014\ufeb1\021\ufeb1\001\002" +
    "\000\010\003\ufeb5\014\ufeb5\021\ufeb5\001\002\000\010\003" +
    "\ufeb0\014\ufeb0\021\ufeb0\001\002\000\010\003\ufead\014\ufead" +
    "\021\ufead\001\002\000\010\003\uff29\014\uff29\021\uff29\001" +
    "\002\000\040\003\213\022\202\024\200\025\175\026\203" +
    "\027\201\030\100\031\066\032\063\033\067\034\076\035" +
    "\064\036\204\037\073\040\062\001\002\000\044\003\uff07" +
    "\014\uff07\021\uff07\022\202\024\200\025\175\026\203\027" +
    "\201\030\100\031\066\032\063\033\067\034\076\035\064" +
    "\036\204\037\073\040\062\001\002\000\010\003\uff08\014" +
    "\uff08\021\uff08\001\002\000\010\003\uff2a\014\uff2a\021\uff2a" +
    "\001\002\000\010\003\uff09\014\uff09\021\uff09\001\002\000" +
    "\006\003\217\022\220\001\002\000\012\003\uff25\014\uff25" +
    "\021\uff25\022\216\001\002\000\010\003\uff26\014\uff26\021" +
    "\uff26\001\002\000\010\003\uff27\014\uff27\021\uff27\001\002" +
    "\000\010\003\uff34\014\uff34\021\uff34\001\002\000\024\003" +
    "\235\121\225\122\226\123\233\124\231\125\227\126\230" +
    "\127\232\130\223\001\002\000\030\003\uff1c\014\uff1c\021" +
    "\uff1c\121\225\122\226\123\233\124\231\125\227\126\230" +
    "\127\232\130\223\001\002\000\010\003\ufefe\014\ufefe\021" +
    "\ufefe\001\002\000\010\003\uff1d\014\uff1d\021\uff1d\001\002" +
    "\000\010\003\uff05\014\uff05\021\uff05\001\002\000\010\003" +
    "\uff04\014\uff04\021\uff04\001\002\000\010\003\uff01\014\uff01" +
    "\021\uff01\001\002\000\010\003\uff00\014\uff00\021\uff00\001" +
    "\002\000\010\003\uff02\014\uff02\021\uff02\001\002\000\010" +
    "\003\ufeff\014\ufeff\021\ufeff\001\002\000\010\003\uff03\014" +
    "\uff03\021\uff03\001\002\000\010\003\uff31\014\uff31\021\uff31" +
    "\001\002\000\010\003\uff1e\014\uff1e\021\uff1e\001\002\000" +
    "\040\003\242\022\202\024\200\025\175\026\203\027\201" +
    "\030\100\031\066\032\063\033\067\034\076\035\064\036" +
    "\204\037\073\040\062\001\002\000\044\003\uff19\014\uff19" +
    "\021\uff19\022\202\024\200\025\175\026\203\027\201\030" +
    "\100\031\066\032\063\033\067\034\076\035\064\036\204" +
    "\037\073\040\062\001\002\000\010\003\uff1a\014\uff1a\021" +
    "\uff1a\001\002\000\010\003\uff30\014\uff30\021\uff30\001\002" +
    "\000\010\003\uff1b\014\uff1b\021\uff1b\001\002\000\006\003" +
    "\247\027\246\001\002\000\012\003\uff0a\014\uff0a\021\uff0a" +
    "\027\245\001\002\000\010\003\uff0b\014\uff0b\021\uff0b\001" +
    "\002\000\010\003\uff2b\014\uff2b\021\uff2b\001\002\000\010" +
    "\003\uff0c\014\uff0c\021\uff0c\001\002\000\010\003\253\030" +
    "\100\031\066\001\002\000\014\003\uff13\014\uff13\021\uff13" +
    "\030\100\031\066\001\002\000\010\003\uff14\014\uff14\021" +
    "\uff14\001\002\000\010\003\uff15\014\uff15\021\uff15\001\002" +
    "\000\010\003\uff2e\014\uff2e\021\uff2e\001\002\000\006\003" +
    "\260\022\261\001\002\000\012\003\uff1f\014\uff1f\021\uff1f" +
    "\022\257\001\002\000\010\003\uff20\014\uff20\021\uff20\001" +
    "\002\000\010\003\uff21\014\uff21\021\uff21\001\002\000\010" +
    "\003\uff32\014\uff32\021\uff32\001\002\000\010\003\uff37\013" +
    "\uff37\014\uff37\001\002\000\010\003\uff39\013\uff39\014\uff39" +
    "\001\002\000\006\003\267\036\270\001\002\000\012\003" +
    "\uff10\014\uff10\021\uff10\036\266\001\002\000\010\003\uff11" +
    "\014\uff11\021\uff11\001\002\000\010\003\uff12\014\uff12\021" +
    "\uff12\001\002\000\010\003\uff2d\014\uff2d\021\uff2d\001\002" +
    "\000\006\003\275\027\274\001\002\000\012\003\uff0d\014" +
    "\uff0d\021\uff0d\027\273\001\002\000\010\003\uff0e\014\uff0e" +
    "\021\uff0e\001\002\000\010\003\uff2c\014\uff2c\021\uff2c\001" +
    "\002\000\010\003\uff0f\014\uff0f\021\uff0f\001\002\000\034" +
    "\003\302\022\077\024\074\026\070\027\071\030\100\031" +
    "\066\032\063\033\067\034\076\035\064\037\073\040\062" +
    "\001\002\000\040\003\uff22\014\uff22\021\uff22\022\077\024" +
    "\074\026\070\027\071\030\100\031\066\032\063\033\067" +
    "\034\076\035\064\037\073\040\062\001\002\000\010\003" +
    "\uff23\014\uff23\021\uff23\001\002\000\010\003\uff33\014\uff33" +
    "\021\uff33\001\002\000\010\003\uff24\014\uff24\021\uff24\001" +
    "\002\000\006\003\uffdf\004\uffdf\001\002\000\004\021\305" +
    "\001\002\000\010\003\uff38\013\uff38\014\uff38\001\002\000" +
    "\006\003\143\020\145\001\002\000\006\003\uff3b\013\uff3b" +
    "\001\002\000\004\054\311\001\002\000\006\003\044\010" +
    "\043\001\002\000\006\003\313\020\316\001\002\000\012" +
    "\003\320\055\321\056\324\073\322\001\002\000\006\003" +
    "\124\013\125\001\002\000\010\003\uffce\013\uffce\014\353" +
    "\001\002\000\012\003\320\055\321\056\324\073\322\001" +
    "\002\000\006\003\351\021\352\001\002\000\042\003\uffba" +
    "\010\346\014\uffba\021\uffba\022\077\024\074\026\070\027" +
    "\071\030\100\031\066\032\063\033\067\034\076\035\064" +
    "\037\073\040\062\001\002\000\006\003\342\010\341\001" +
    "\002\000\006\003\335\010\334\001\002\000\010\003\uffc9" +
    "\014\332\021\uffc9\001\002\000\006\003\326\010\325\001" +
    "\002\000\034\003\331\022\077\024\074\026\070\027\071" +
    "\030\100\031\066\032\063\033\067\034\076\035\064\037" +
    "\073\040\062\001\002\000\040\003\uffbe\014\uffbe\021\uffbe" +
    "\022\077\024\074\026\070\027\071\030\100\031\066\032" +
    "\063\033\067\034\076\035\064\037\073\040\062\001\002" +
    "\000\010\003\uffc2\014\uffc2\021\uffc2\001\002\000\010\003" +
    "\uffc7\014\uffc7\021\uffc7\001\002\000\010\003\uffbf\014\uffbf" +
    "\021\uffbf\001\002\000\012\003\320\055\321\056\324\073" +
    "\322\001\002\000\006\003\uffca\021\uffca\001\002\000\006" +
    "\003\340\024\337\001\002\000\012\003\uffbb\014\uffbb\021" +
    "\uffbb\024\336\001\002\000\010\003\uffbc\014\uffbc\021\uffbc" +
    "\001\002\000\010\003\uffc6\014\uffc6\021\uffc6\001\002\000" +
    "\010\003\uffbd\014\uffbd\021\uffbd\001\002\000\034\003\345" +
    "\022\077\024\074\026\070\027\071\030\100\031\066\032" +
    "\063\033\067\034\076\035\064\037\073\040\062\001\002" +
    "\000\040\003\uffc1\014\uffc1\021\uffc1\022\077\024\074\026" +
    "\070\027\071\030\100\031\066\032\063\033\067\034\076" +
    "\035\064\037\073\040\062\001\002\000\010\003\uffc3\014" +
    "\uffc3\021\uffc3\001\002\000\010\003\uffc8\014\uffc8\021\uffc8" +
    "\001\002\000\010\003\uffc0\014\uffc0\021\uffc0\001\002\000" +
    "\032\022\077\024\074\026\070\027\071\030\100\031\066" +
    "\032\063\033\067\034\076\035\064\037\073\040\062\001" +
    "\002\000\010\003\uffc5\014\uffc5\021\uffc5\001\002\000\010" +
    "\003\uffc4\014\uffc4\021\uffc4\001\002\000\010\003\uffcb\013" +
    "\uffcb\014\uffcb\001\002\000\010\003\uffcd\013\uffcd\014\uffcd" +
    "\001\002\000\006\003\313\020\316\001\002\000\006\003" +
    "\uffcf\013\uffcf\001\002\000\006\003\uffe6\004\uffe6\001\002" +
    "\000\004\021\357\001\002\000\010\003\uffcc\013\uffcc\014" +
    "\uffcc\001\002\000\004\101\361\001\002\000\006\003\044" +
    "\010\043\001\002\000\006\003\363\020\366\001\002\000" +
    "\034\003\161\065\157\102\146\103\152\104\156\105\371" +
    "\106\155\107\162\110\153\111\150\112\147\113\154\114" +
    "\160\001\002\000\010\003\ufee4\013\ufee4\014\u0105\001\002" +
    "\000\006\003\124\013\125\001\002\000\034\003\161\065" +
    "\157\102\146\103\152\104\156\105\371\106\155\107\162" +
    "\110\153\111\150\112\147\113\154\114\160\001\002\000" +
    "\006\003\u0102\021\u0103\001\002\000\010\003\ufedf\014\u0100" +
    "\021\ufedf\001\002\000\006\003\374\010\373\001\002\000" +
    "\010\003\ufedd\014\ufedd\021\ufedd\001\002\000\006\003\377" +
    "\027\376\001\002\000\012\003\ufeda\014\ufeda\021\ufeda\027" +
    "\375\001\002\000\010\003\ufedb\014\ufedb\021\ufedb\001\002" +
    "\000\010\003\ufede\014\ufede\021\ufede\001\002\000\010\003" +
    "\ufedc\014\ufedc\021\ufedc\001\002\000\034\003\161\065\157" +
    "\102\146\103\152\104\156\105\371\106\155\107\162\110" +
    "\153\111\150\112\147\113\154\114\160\001\002\000\006" +
    "\003\ufee0\021\ufee0\001\002\000\010\003\ufee1\013\ufee1\014" +
    "\ufee1\001\002\000\010\003\ufee3\013\ufee3\014\ufee3\001\002" +
    "\000\006\003\uffdd\004\uffdd\001\002\000\006\003\363\020" +
    "\366\001\002\000\006\003\ufee5\013\ufee5\001\002\000\004" +
    "\021\u0108\001\002\000\010\003\ufee2\013\ufee2\014\ufee2\001" +
    "\002\000\004\120\u010a\001\002\000\006\003\044\010\043" +
    "\001\002\000\006\003\u010c\020\u010f\001\002\000\006\003" +
    "\u0110\144\u0113\001\002\000\006\003\124\013\125\001\002" +
    "\000\010\003\ufed8\013\ufed8\014\u016d\001\002\000\006\003" +
    "\u0110\144\u0113\001\002\000\006\003\u0114\143\u0116\001\002" +
    "\000\006\003\u0169\021\u016a\001\002\000\010\003\ufed3\014" +
    "\u0167\021\ufed3\001\002\000\006\003\u0114\143\u0116\001\002" +
    "\000\004\136\u015f\001\002\000\006\003\u015d\011\u015e\001" +
    "\002\000\006\003\u0118\136\u0117\001\002\000\006\003\u013e" +
    "\141\u013f\001\002\000\004\141\u0119\001\002\000\004\131" +
    "\u011a\001\002\000\004\041\u011b\001\002\000\004\012\u011c" +
    "\001\002\000\006\013\ufec5\043\u011d\001\002\000\010\003" +
    "\ufec6\013\ufec6\014\u013c\001\002\000\004\013\u011f\001\002" +
    "\000\006\003\u0122\142\u0121\001\002\000\006\003\ufecd\011" +
    "\ufecd\001\002\000\006\003\u0137\012\u0138\001\002\000\004" +
    "\012\u0123\001\002\000\004\043\u0124\001\002\000\020\004" +
    "\u0129\005\u0127\006\u012a\132\u012c\133\u012b\134\u012d\140\u0128" +
    "\001\002\000\006\003\ufec3\011\ufec3\001\002\000\006\044" +
    "\u0130\045\u012f\001\002\000\006\044\ufeac\045\ufeac\001\002" +
    "\000\006\044\ufea6\045\ufea6\001\002\000\006\044\ufeab\045" +
    "\ufeab\001\002\000\006\044\ufea7\045\ufea7\001\002\000\006" +
    "\044\ufea8\045\ufea8\001\002\000\006\044\ufea9\045\ufea9\001" +
    "\002\000\006\044\ufeaa\045\ufeaa\001\002\000\010\013\u0133" +
    "\135\u0134\137\u0131\001\002\000\010\013\ufea4\135\ufea4\137" +
    "\ufea4\001\002\000\010\013\ufea5\135\ufea5\137\ufea5\001\002" +
    "\000\004\043\u0124\001\002\000\006\003\ufec0\011\ufec0\001" +
    "\002\000\006\003\ufebd\011\ufebd\001\002\000\004\043\u0124" +
    "\001\002\000\006\003\ufebe\011\ufebe\001\002\000\006\003" +
    "\ufebf\011\ufebf\001\002\000\004\043\u0124\001\002\000\006" +
    "\003\u0139\043\u0124\001\002\000\006\003\ufec1\011\ufec1\001" +
    "\002\000\006\003\ufec4\011\ufec4\001\002\000\006\003\ufec2" +
    "\011\ufec2\001\002\000\010\003\ufec5\013\ufec5\043\u011d\001" +
    "\002\000\006\003\ufec7\013\ufec7\001\002\000\004\131\u0157" +
    "\001\002\000\006\003\u0141\131\u0140\001\002\000\006\003" +
    "\u0147\041\u0148\001\002\000\004\041\u0142\001\002\000\004" +
    "\012\u0143\001\002\000\006\013\ufec5\043\u011d\001\002\000" +
    "\004\013\u0145\001\002\000\006\003\u0122\142\u0121\001\002" +
    "\000\006\003\ufecb\011\ufecb\001\002\000\004\012\u0153\001" +
    "\002\000\006\003\u0149\012\u014a\001\002\000\006\013\ufec5" +
    "\043\u011d\001\002\000\010\003\ufec5\013\ufec5\043\u011d\001" +
    "\002\000\006\003\u014c\013\u014d\001\002\000\006\003\u0122" +
    "\142\u0121\001\002\000\006\003\u0122\142\u0121\001\002\000" +
    "\006\003\ufecf\011\ufecf\001\002\000\006\003\ufec8\011\ufec8" +
    "\001\002\000\004\013\u0151\001\002\000\006\003\u0122\142" +
    "\u0121\001\002\000\006\003\ufec9\011\ufec9\001\002\000\006" +
    "\013\ufec5\043\u011d\001\002\000\004\013\u0155\001\002\000" +
    "\006\003\u0122\142\u0121\001\002\000\006\003\ufeca\011\ufeca" +
    "\001\002\000\004\041\u0158\001\002\000\004\012\u0159\001" +
    "\002\000\006\013\ufec5\043\u011d\001\002\000\004\013\u015b" +
    "\001\002\000\006\003\u0122\142\u0121\001\002\000\006\003" +
    "\ufecc\011\ufecc\001\002\000\010\003\ufed0\014\ufed0\021\ufed0" +
    "\001\002\000\010\003\ufed2\014\ufed2\021\ufed2\001\002\000" +
    "\004\141\u0160\001\002\000\004\131\u0161\001\002\000\004" +
    "\041\u0162\001\002\000\004\012\u0163\001\002\000\006\013" +
    "\ufec5\043\u011d\001\002\000\004\013\u0165\001\002\000\006" +
    "\003\u0122\142\u0121\001\002\000\006\003\ufece\011\ufece\001" +
    "\002\000\006\003\u0110\144\u0113\001\002\000\006\003\ufed4" +
    "\021\ufed4\001\002\000\010\003\ufed5\013\ufed5\014\ufed5\001" +
    "\002\000\010\003\ufed7\013\ufed7\014\ufed7\001\002\000\004" +
    "\011\u016c\001\002\000\010\003\ufed1\014\ufed1\021\ufed1\001" +
    "\002\000\006\003\u010c\020\u010f\001\002\000\006\003\ufed9" +
    "\013\ufed9\001\002\000\006\003\uffdc\004\uffdc\001\002\000" +
    "\004\021\u0171\001\002\000\010\003\ufed6\013\ufed6\014\ufed6" +
    "\001\002\000\004\077\u0173\001\002\000\006\003\044\010" +
    "\043\001\002\000\006\003\u0176\020\u0177\001\002\000\006" +
    "\003\124\013\125\001\002\000\014\003\u017f\065\u017c\066" +
    "\u017e\067\u0181\070\u017b\001\002\000\014\003\u017f\065\u017c" +
    "\066\u017e\067\u0181\070\u017b\001\002\000\010\003\uff54\013" +
    "\uff54\014\u0179\001\002\000\006\003\u0176\020\u0177\001\002" +
    "\000\006\003\uff55\013\uff55\001\002\000\006\003\u0199\010" +
    "\u0198\001\002\000\006\003\u0194\010\u0193\001\002\000\010" +
    "\003\uff4f\014\u0191\021\uff4f\001\002\000\006\003\u018d\010" +
    "\u018c\001\002\000\046\003\uff3c\010\u018a\014\uff3c\021\uff3c" +
    "\022\202\024\200\025\175\026\203\027\201\030\100\031" +
    "\066\032\063\033\067\034\076\035\064\036\204\037\073" +
    "\040\062\001\002\000\006\003\u0187\021\u0188\001\002\000" +
    "\006\003\u0183\010\u0182\001\002\000\034\003\u0186\022\077" +
    "\024\074\026\070\027\071\030\100\031\066\032\063\033" +
    "\067\034\076\035\064\037\073\040\062\001\002\000\040" +
    "\003\uff40\014\uff40\021\uff40\022\077\024\074\026\070\027" +
    "\071\030\100\031\066\032\063\033\067\034\076\035\064" +
    "\037\073\040\062\001\002\000\010\003\uff41\014\uff41\021" +
    "\uff41\001\002\000\010\003\uff4c\014\uff4c\021\uff4c\001\002" +
    "\000\010\003\uff42\014\uff42\021\uff42\001\002\000\010\003" +
    "\uff51\013\uff51\014\uff51\001\002\000\010\003\uff53\013\uff53" +
    "\014\uff53\001\002\000\010\003\uff49\014\uff49\021\uff49\001" +
    "\002\000\036\022\202\024\200\025\175\026\203\027\201" +
    "\030\100\031\066\032\063\033\067\034\076\035\064\036" +
    "\204\037\073\040\062\001\002\000\010\003\uff4a\014\uff4a" +
    "\021\uff4a\001\002\000\040\003\u0190\022\202\024\200\025" +
    "\175\026\203\027\201\030\100\031\066\032\063\033\067" +
    "\034\076\035\064\036\204\037\073\040\062\001\002\000" +
    "\044\003\uff43\014\uff43\021\uff43\022\202\024\200\025\175" +
    "\026\203\027\201\030\100\031\066\032\063\033\067\034" +
    "\076\035\064\036\204\037\073\040\062\001\002\000\010" +
    "\003\uff44\014\uff44\021\uff44\001\002\000\010\003\uff4d\014" +
    "\uff4d\021\uff4d\001\002\000\010\003\uff45\014\uff45\021\uff45" +
    "\001\002\000\014\003\u017f\065\u017c\066\u017e\067\u0181\070" +
    "\u017b\001\002\000\006\003\uff50\021\uff50\001\002\000\006" +
    "\003\u0196\022\u0197\001\002\000\012\003\uff46\014\uff46\021" +
    "\uff46\022\u0195\001\002\000\010\003\uff47\014\uff47\021\uff47" +
    "\001\002\000\010\003\uff48\014\uff48\021\uff48\001\002\000" +
    "\010\003\uff4e\014\uff4e\021\uff4e\001\002\000\010\003\u019b" +
    "\037\073\040\062\001\002\000\014\003\uff3d\014\uff3d\021" +
    "\uff3d\037\073\040\062\001\002\000\010\003\uff3e\014\uff3e" +
    "\021\uff3e\001\002\000\010\003\uff3f\014\uff3f\021\uff3f\001" +
    "\002\000\010\003\uff4b\014\uff4b\021\uff4b\001\002\000\004" +
    "\021\u019e\001\002\000\010\003\uff52\013\uff52\014\uff52\001" +
    "\002\000\006\003\uffe0\004\uffe0\001\002\000\004\077\u01a1" +
    "\001\002\000\006\003\044\010\043\001\002\000\006\003" +
    "\u01a4\020\u01a6\001\002\000\006\003\124\013\125\001\002" +
    "\000\006\003\u01a9\065\u01a8\001\002\000\010\003\uff62\013" +
    "\uff62\014\u01b7\001\002\000\006\003\u01a9\065\u01a8\001\002" +
    "\000\010\003\uff5d\014\u01b5\021\uff5d\001\002\000\006\003" +
    "\u01b1\010\u01b0\001\002\000\014\003\uff56\010\u01ad\014\uff56" +
    "\021\uff56\022\u01ae\001\002\000\006\003\u01ab\021\u01ac\001" +
    "\002\000\010\003\uff5f\013\uff5f\014\uff5f\001\002\000\010" +
    "\003\uff61\013\uff61\014\uff61\001\002\000\004\022\u01af\001" +
    "\002\000\010\003\uff5a\014\uff5a\021\uff5a\001\002\000\010" +
    "\003\uff5b\014\uff5b\021\uff5b\001\002\000\006\003\u01b3\022" +
    "\u01b4\001\002\000\012\003\uff57\014\uff57\021\uff57\022\u01b2" +
    "\001\002\000\010\003\uff58\014\uff58\021\uff58\001\002\000" +
    "\010\003\uff59\014\uff59\021\uff59\001\002\000\010\003\uff5c" +
    "\014\uff5c\021\uff5c\001\002\000\006\003\u01a9\065\u01a8\001" +
    "\002\000\006\003\uff5e\021\uff5e\001\002\000\006\003\u01a4" +
    "\020\u01a6\001\002\000\006\003\uff63\013\uff63\001\002\000" +
    "\004\021\u01ba\001\002\000\010\003\uff60\013\uff60\014\uff60" +
    "\001\002\000\006\003\uffe1\004\uffe1\001\002\000\004\077" +
    "\u01bd\001\002\000\006\003\044\010\043\001\002\000\006" +
    "\003\u01c1\020\u01c2\001\002\000\006\003\124\013\125\001" +
    "\002\000\010\003\uff86\013\uff86\014\u01f3\001\002\000\020" +
    "\003\u01c9\065\u01c8\066\u01c4\067\u01cb\070\u01c5\071\u01c3\073" +
    "\u01ca\001\002\000\020\003\u01c9\065\u01c8\066\u01c4\067\u01cb" +
    "\070\u01c5\071\u01c3\073\u01ca\001\002\000\006\003\u01ed\010" +
    "\u01ec\001\002\000\006\003\u01e8\010\u01e7\001\002\000\006" +
    "\003\u01e3\010\u01e2\001\002\000\006\003\u01e0\021\u01e1\001" +
    "\002\000\010\003\uff81\014\u01de\021\uff81\001\002\000\006" +
    "\003\u01da\010\u01d9\001\002\000\046\003\uff66\010\u01d7\014" +
    "\uff66\021\uff66\022\202\024\200\025\175\026\203\027\201" +
    "\030\100\031\066\032\063\033\067\034\076\035\064\036" +
    "\204\037\073\040\062\001\002\000\006\003\u01d2\010\u01d1" +
    "\001\002\000\006\003\u01cd\010\u01cc\001\002\000\034\003" +
    "\u01d0\022\077\024\074\026\070\027\071\030\100\031\066" +
    "\032\063\033\067\034\076\035\064\037\073\040\062\001" +
    "\002\000\040\003\uff70\014\uff70\021\uff70\022\077\024\074" +
    "\026\070\027\071\030\100\031\066\032\063\033\067\034" +
    "\076\035\064\037\073\040\062\001\002\000\010\003\uff71" +
    "\014\uff71\021\uff71\001\002\000\010\003\uff7e\014\uff7e\021" +
    "\uff7e\001\002\000\010\003\uff72\014\uff72\021\uff72\001\002" +
    "\000\006\003\u01d5\024\u01d4\001\002\000\012\003\uff67\014" +
    "\uff67\021\uff67\024\u01d3\001\002\000\010\003\uff68\014\uff68" +
    "\021\uff68\001\002\000\010\003\uff7b\014\uff7b\021\uff7b\001" +
    "\002\000\010\003\uff69\014\uff69\021\uff69\001\002\000\010" +
    "\003\uff7a\014\uff7a\021\uff7a\001\002\000\036\022\202\024" +
    "\200\025\175\026\203\027\201\030\100\031\066\032\063" +
    "\033\067\034\076\035\064\036\204\037\073\040\062\001" +
    "\002\000\010\003\uff79\014\uff79\021\uff79\001\002\000\006" +
    "\003\u01dc\022\u01dd\001\002\000\012\003\uff76\014\uff76\021" +
    "\uff76\022\u01db\001\002\000\010\003\uff77\014\uff77\021\uff77" +
    "\001\002\000\010\003\uff78\014\uff78\021\uff78\001\002\000" +
    "\010\003\uff80\014\uff80\021\uff80\001\002\000\020\003\u01c9" +
    "\065\u01c8\066\u01c4\067\u01cb\070\u01c5\071\u01c3\073\u01ca\001" +
    "\002\000\006\003\uff82\021\uff82\001\002\000\010\003\uff83" +
    "\013\uff83\014\uff83\001\002\000\010\003\uff85\013\uff85\014" +
    "\uff85\001\002\000\010\003\u01e5\037\073\040\062\001\002" +
    "\000\014\003\uff6d\014\uff6d\021\uff6d\037\073\040\062\001" +
    "\002\000\010\003\uff6e\014\uff6e\021\uff6e\001\002\000\010" +
    "\003\uff6f\014\uff6f\021\uff6f\001\002\000\010\003\uff7d\014" +
    "\uff7d\021\uff7d\001\002\000\040\003\u01eb\022\202\024\200" +
    "\025\175\026\203\027\201\030\100\031\066\032\063\033" +
    "\067\034\076\035\064\036\204\037\073\040\062\001\002" +
    "\000\044\003\uff73\014\uff73\021\uff73\022\202\024\200\025" +
    "\175\026\203\027\201\030\100\031\066\032\063\033\067" +
    "\034\076\035\064\036\204\037\073\040\062\001\002\000" +
    "\010\003\uff74\014\uff74\021\uff74\001\002\000\010\003\uff7f" +
    "\014\uff7f\021\uff7f\001\002\000\010\003\uff75\014\uff75\021" +
    "\uff75\001\002\000\034\003\u01f0\022\077\024\074\026\070" +
    "\027\071\030\100\031\066\032\063\033\067\034\076\035" +
    "\064\037\073\040\062\001\002\000\040\003\uff6a\014\uff6a" +
    "\021\uff6a\022\077\024\074\026\070\027\071\030\100\031" +
    "\066\032\063\033\067\034\076\035\064\037\073\040\062" +
    "\001\002\000\010\003\uff6b\014\uff6b\021\uff6b\001\002\000" +
    "\010\003\uff7c\014\uff7c\021\uff7c\001\002\000\010\003\uff6c" +
    "\014\uff6c\021\uff6c\001\002\000\004\021\u01f2\001\002\000" +
    "\010\003\uff84\013\uff84\014\uff84\001\002\000\006\003\u01c1" +
    "\020\u01c2\001\002\000\006\003\uff87\013\uff87\001\002\000" +
    "\006\003\uffe2\004\uffe2\001\002\000\004\101\u01f7\001\002" +
    "\000\006\003\044\010\043\001\002\000\006\003\u01f9\020" +
    "\u01fb\001\002\000\010\003\u0200\065\u01ff\103\u0201\001\002" +
    "\000\006\003\124\013\125\001\002\000\010\003\u0200\065" +
    "\u01ff\103\u0201\001\002\000\010\003\ufef6\013\ufef6\014\u01fd" +
    "\001\002\000\006\003\u01f9\020\u01fb\001\002\000\006\003" +
    "\ufef7\013\ufef7\001\002\000\006\003\u0211\010\u0210\001\002" +
    "\000\014\003\ufee6\010\u020d\014\ufee6\021\ufee6\022\u020e\001" +
    "\002\000\006\003\u0209\010\u0208\001\002\000\006\003\u0206" +
    "\021\u0207\001\002\000\010\003\ufef1\014\u0204\021\ufef1\001" +
    "\002\000\010\003\u0200\065\u01ff\103\u0201\001\002\000\006" +
    "\003\ufef2\021\ufef2\001\002\000\010\003\ufef3\013\ufef3\014" +
    "\ufef3\001\002\000\010\003\ufef5\013\ufef5\014\ufef5\001\002" +
    "\000\006\003\u020b\022\u020c\001\002\000\012\003\ufee7\014" +
    "\ufee7\021\ufee7\022\u020a\001\002\000\010\003\ufee8\014\ufee8" +
    "\021\ufee8\001\002\000\010\003\ufee9\014\ufee9\021\ufee9\001" +
    "\002\000\010\003\ufeef\014\ufeef\021\ufeef\001\002\000\004" +
    "\022\u020f\001\002\000\010\003\ufeed\014\ufeed\021\ufeed\001" +
    "\002\000\010\003\ufeee\014\ufeee\021\ufeee\001\002\000\006" +
    "\003\u0213\022\u0214\001\002\000\012\003\ufeea\014\ufeea\021" +
    "\ufeea\022\u0212\001\002\000\010\003\ufeeb\014\ufeeb\021\ufeeb" +
    "\001\002\000\010\003\ufeec\014\ufeec\021\ufeec\001\002\000" +
    "\010\003\ufef0\014\ufef0\021\ufef0\001\002\000\006\003\uffde" +
    "\004\uffde\001\002\000\004\021\u0217\001\002\000\010\003" +
    "\ufef4\013\ufef4\014\ufef4\001\002\000\004\054\u0219\001\002" +
    "\000\006\003\044\010\043\001\002\000\006\003\u021b\020" +
    "\u021e\001\002\000\020\003\u0225\055\u0221\056\u0227\060\u0220" +
    "\061\u0226\062\u0222\072\u0223\001\002\000\010\003\uffb8\013" +
    "\uffb8\014\u0240\001\002\000\006\003\124\013\125\001\002" +
    "\000\020\003\u0225\055\u0221\056\u0227\060\u0220\061\u0226\062" +
    "\u0222\072\u0223\001\002\000\010\003\uffb3\014\u023d\021\uffb3" +
    "\001\002\000\004\010\u023b\001\002\000\006\003\u0238\010" +
    "\u0237\001\002\000\004\010\u0235\001\002\000\004\010\u0233" +
    "\001\002\000\006\003\u0231\021\u0232\001\002\000\042\003" +
    "\uffa6\010\u022e\014\uffa6\021\uffa6\022\077\024\074\026\070" +
    "\027\071\030\100\031\066\032\063\033\067\034\076\035" +
    "\064\037\073\040\062\001\002\000\004\010\u022c\001\002" +
    "\000\006\003\u0229\010\u0228\001\002\000\004\003\u022b\001" +
    "\002\000\040\003\uffa7\014\uffa7\021\uffa7\022\077\024\074" +
    "\026\070\027\071\030\100\031\066\032\063\033\067\034" +
    "\076\035\064\037\073\040\062\001\002\000\010\003\uffa8" +
    "\014\uffa8\021\uffa8\001\002\000\010\003\uffa9\014\uffa9\021" +
    "\uffa9\001\002\000\032\022\077\024\074\026\070\027\071" +
    "\030\100\031\066\032\063\033\067\034\076\035\064\037" +
    "\073\040\062\001\002\000\010\003\uffb0\014\uffb0\021\uffb0" +
    "\001\002\000\032\022\077\024\074\026\070\027\071\030" +
    "\100\031\066\032\063\033\067\034\076\035\064\037\073" +
    "\040\062\001\002\000\010\003\uffae\014\uffae\021\uffae\001" +
    "\002\000\010\003\uffad\014\uffad\021\uffad\001\002\000\010" +
    "\003\uffb5\013\uffb5\014\uffb5\001\002\000\010\003\uffb7\013" +
    "\uffb7\014\uffb7\001\002\000\032\022\077\024\074\026\070" +
    "\027\071\030\100\031\066\032\063\033\067\034\076\035" +
    "\064\037\073\040\062\001\002\000\010\003\uffb1\014\uffb1" +
    "\021\uffb1\001\002\000\004\024\u0236\001\002\000\010\003" +
    "\uffaf\014\uffaf\021\uffaf\001\002\000\004\003\u023a\001\002" +
    "\000\040\003\uffaa\014\uffaa\021\uffaa\022\077\024\074\026" +
    "\070\027\071\030\100\031\066\032\063\033\067\034\076" +
    "\035\064\037\073\040\062\001\002\000\010\003\uffab\014" +
    "\uffab\021\uffab\001\002\000\010\003\uffac\014\uffac\021\uffac" +
    "\001\002\000\032\022\077\024\074\026\070\027\071\030" +
    "\100\031\066\032\063\033\067\034\076\035\064\037\073" +
    "\040\062\001\002\000\010\003\uffb2\014\uffb2\021\uffb2\001" +
    "\002\000\020\003\u0225\055\u0221\056\u0227\060\u0220\061\u0226" +
    "\062\u0222\072\u0223\001\002\000\006\003\uffb4\021\uffb4\001" +
    "\002\000\006\003\uffe5\004\uffe5\001\002\000\006\003\u021b" +
    "\020\u021e\001\002\000\006\003\uffb9\013\uffb9\001\002\000" +
    "\004\021\u0243\001\002\000\010\003\uffb6\013\uffb6\014\uffb6" +
    "\001\002\000\004\054\u0245\001\002\000\006\003\044\010" +
    "\043\001\002\000\006\003\u0247\020\u024a\001\002\000\006" +
    "\003\u024d\055\u024c\001\002\000\006\003\124\013\125\001" +
    "\002\000\010\003\uffa4\013\uffa4\014\u0258\001\002\000\006" +
    "\003\u024d\055\u024c\001\002\000\006\003\u0256\021\u0257\001" +
    "\002\000\006\003\u0252\010\u0251\001\002\000\040\003\uff9a" +
    "\010\u024e\021\uff9a\022\077\024\074\026\070\027\071\030" +
    "\100\031\066\032\063\033\067\034\076\035\064\037\073" +
    "\040\062\001\002\000\032\022\077\024\074\026\070\027" +
    "\071\030\100\031\066\032\063\033\067\034\076\035\064" +
    "\037\073\040\062\001\002\000\006\003\uff9f\021\uff9f\001" +
    "\002\000\006\003\uff9e\021\uff9e\001\002\000\034\003\u0255" +
    "\022\077\024\074\026\070\027\071\030\100\031\066\032" +
    "\063\033\067\034\076\035\064\037\073\040\062\001\002" +
    "\000\036\003\uff9b\021\uff9b\022\077\024\074\026\070\027" +
    "\071\030\100\031\066\032\063\033\067\034\076\035\064" +
    "\037\073\040\062\001\002\000\006\003\uff9c\021\uff9c\001" +
    "\002\000\006\003\uffa0\021\uffa0\001\002\000\006\003\uff9d" +
    "\021\uff9d\001\002\000\010\003\uffa1\013\uffa1\014\uffa1\001" +
    "\002\000\010\003\uffa3\013\uffa3\014\uffa3\001\002\000\006" +
    "\003\u0247\020\u024a\001\002\000\006\003\uffa5\013\uffa5\001" +
    "\002\000\006\003\uffe4\004\uffe4\001\002\000\004\021\u025c" +
    "\001\002\000\010\003\uffa2\013\uffa2\014\uffa2\001\002\000" +
    "\006\003\u025e\004\u025f\001\002\000\034\002\ufff2\007\u0289" +
    "\053\027\057\020\063\017\064\022\074\023\075\031\076" +
    "\024\100\030\115\021\116\026\117\025\001\002\000\006" +
    "\003\u0263\007\u0264\001\002\000\006\003\u025e\004\u025f\001" +
    "\002\000\004\002\ufffc\001\002\000\004\002\ufff8\001\002" +
    "\000\006\050\u0287\051\015\001\002\000\010\003\u0265\050" +
    "\u0267\051\u0266\001\002\000\006\005\u0280\010\u0281\001\002" +
    "\000\006\003\u026b\010\u026a\001\002\000\006\003\u0269\005" +
    "\u0268\001\002\000\004\002\ufff7\001\002\000\004\002\ufff3" +
    "\001\002\000\030\053\027\057\020\063\017\064\022\074" +
    "\023\075\031\076\024\100\030\115\021\116\026\117\025" +
    "\001\002\000\030\053\027\057\020\063\017\064\022\074" +
    "\023\075\031\076\024\100\030\115\021\116\026\117\025" +
    "\001\002\000\004\004\u026d\001\002\000\004\052\u026e\001" +
    "\002\000\004\007\u026f\001\002\000\004\005\u0270\001\002" +
    "\000\010\002\uffed\003\uffed\004\uffed\001\002\000\006\003" +
    "\u0273\004\u0272\001\002\000\006\003\u0278\052\u0277\001\002" +
    "\000\012\002\uffe7\003\uffe7\004\uffe7\052\u0274\001\002\000" +
    "\004\007\u0275\001\002\000\004\005\u0276\001\002\000\010" +
    "\002\uffeb\003\uffeb\004\uffeb\001\002\000\006\003\u027b\007" +
    "\u027c\001\002\000\004\007\u0279\001\002\000\004\005\u027a" +
    "\001\002\000\010\002\uffea\003\uffea\004\uffea\001\002\000" +
    "\004\005\u027f\001\002\000\006\003\u027e\005\u027d\001\002" +
    "\000\010\002\ufff1\003\ufff1\004\ufff1\001\002\000\010\002" +
    "\uffe8\003\uffe8\004\uffe8\001\002\000\010\002\uffe9\003\uffe9" +
    "\004\uffe9\001\002\000\004\002\ufff4\001\002\000\030\053" +
    "\027\057\020\063\017\064\022\074\023\075\031\076\024" +
    "\100\030\115\021\116\026\117\025\001\002\000\004\004" +
    "\u0283\001\002\000\004\052\u0284\001\002\000\004\007\u0285" +
    "\001\002\000\004\005\u0286\001\002\000\010\002\uffee\003" +
    "\uffee\004\uffee\001\002\000\004\005\u0288\001\002\000\004" +
    "\002\ufff5\001\002\000\006\050\u0290\051\u028f\001\002\000" +
    "\004\004\u028b\001\002\000\004\052\u028c\001\002\000\004" +
    "\007\u028d\001\002\000\004\005\u028e\001\002\000\010\002" +
    "\uffec\003\uffec\004\uffec\001\002\000\004\010\u0292\001\002" +
    "\000\004\005\u0291\001\002\000\004\002\ufff6\001\002\000" +
    "\030\053\027\057\020\063\017\064\022\074\023\075\031" +
    "\076\024\100\030\115\021\116\026\117\025\001\002\000" +
    "\004\004\u0294\001\002\000\004\052\u0295\001\002\000\004" +
    "\007\u0296\001\002\000\004\005\u0297\001\002\000\010\002" +
    "\ufff0\003\ufff0\004\ufff0\001\002\000\006\003\u029d\005\u029c" +
    "\001\002\000\006\005\u029a\010\u0281\001\002\000\006\003" +
    "\u025e\004\u025f\001\002\000\004\002\ufffb\001\002\000\006" +
    "\003\u025e\004\u025f\001\002\000\006\003\u025e\004\u025f\001" +
    "\002\000\004\002\ufffa\001\002\000\004\002\ufffe\001\002" +
    "\000\006\047\u02a2\051\u028f\001\002\000\004\002\ufff9\001" +
    "\002\000\004\005\u02a3\001\002\000\006\003\u025e\004\u025f" +
    "\001\002\000\004\002\ufffd\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02a2\000\010\002\007\003\006\004\005\001\001\000" +
    "\010\003\u025f\005\u0289\032\u02a0\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\031\001\001\000" +
    "\004\006\u0243\001\001\000\004\006\u0217\001\001\000\004" +
    "\006\u01f5\001\001\000\004\006\u01bb\001\001\000\004\006" +
    "\u019f\001\001\000\004\006\u0171\001\001\000\004\006\u0108" +
    "\001\001\000\004\006\357\001\001\000\004\006\307\001" +
    "\001\000\004\006\136\001\001\000\004\006\040\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\044\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\022\045\041\047" +
    "\001\001\000\004\010\122\001\001\000\006\054\120\067" +
    "\054\001\001\000\002\001\001\000\006\054\053\067\054" +
    "\001\001\000\012\012\074\013\071\014\064\015\114\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\012\074\013\071\014\064\015" +
    "\100\001\001\000\012\012\074\013\071\014\064\015\060" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\054\103" +
    "\067\054\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\012\074\013\071\014\064\015\111" +
    "\001\001\000\012\012\074\013\071\014\064\015\110\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\074\013\071\014\064\015\115\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\022\117\041\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\140\001\001\000\006\024\143\045\141" +
    "\001\001\000\002\001\001\000\006\060\303\073\162\001" +
    "\001\000\004\010\302\001\001\000\006\060\150\073\162" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\012\176\013\173" +
    "\014\204\016\172\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\060\164\073\162\001\001\000\002\001\001" +
    "\000\004\013\170\001\001\000\004\013\167\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\012" +
    "\176\013\173\014\204\016\205\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\176\013\173\014\204\016\211\001" +
    "\001\000\012\012\176\013\173\014\204\016\210\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\233\001\001\000" +
    "\004\011\223\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\012" +
    "\176\013\173\014\204\016\240\001\001\000\012\012\176" +
    "\013\173\014\204\016\237\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\012\253\001\001\000\004\012\251\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\074\013\071\014\064\015\300\001" +
    "\001\000\012\012\074\013\071\014\064\015\277\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\024\306\045\141\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\311\001\001\000\006\017\313\036\314" +
    "\001\001\000\006\051\355\064\322\001\001\000\004\010" +
    "\354\001\001\000\002\001\001\000\006\051\316\064\322" +
    "\001\001\000\002\001\001\000\012\012\074\013\071\014" +
    "\064\015\346\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\012\074\013" +
    "\071\014\064\015\327\001\001\000\012\012\074\013\071" +
    "\014\064\015\326\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\051\332\064\322\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\012\074\013\071\014\064\015\343\001\001\000\012\012" +
    "\074\013\071\014\064\015\342\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\012\074\013" +
    "\071\014\064\015\347\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\017" +
    "\353\036\314\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\361\001\001\000\006\027\364\047\363\001\001" +
    "\000\010\062\u0106\073\371\075\367\001\001\000\002\001" +
    "\001\000\004\010\u0103\001\001\000\010\062\366\073\371" +
    "\075\367\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\062\u0100\073\371\075\367\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\027\u0105\047\363\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\u010a\001\001\000\006\030\u010c\050\u010d\001\001" +
    "\000\006\063\u016f\076\u0111\001\001\000\004\010\u016e\001" +
    "\001\000\002\001\001\000\006\063\u0110\076\u0111\001\001" +
    "\000\004\035\u016a\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\035\u0114\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\077\u011d\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\100\u011f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\101\u0124\001\001\000" +
    "\004\102\u0125\001\001\000\002\001\001\000\004\103\u012d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\104\u0131\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\101\u0135\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\101\u0134\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\101\u013a\001\001" +
    "\000\004\101\u0139\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\077\u013c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\077\u0143" +
    "\001\001\000\002\001\001\000\004\100\u0145\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\077\u014f\001\001\000\004\077\u014a\001\001\000\002\001" +
    "\001\000\004\100\u014e\001\001\000\004\100\u014d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\100\u0151\001\001\000\002\001\001\000\004\077\u0153" +
    "\001\001\000\002\001\001\000\004\100\u0155\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\077\u0159\001\001\000\002\001\001\000\004\100\u015b\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\077\u0163\001\001\000\002\001\001" +
    "\000\004\100\u0165\001\001\000\002\001\001\000\006\063" +
    "\u0167\076\u0111\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\030\u016d\050\u010d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\u0173\001\001\000\006\023\u0174\044\u0177" +
    "\001\001\000\004\010\u019e\001\001\000\006\057\u019c\072" +
    "\u017c\001\001\000\006\057\u017f\072\u017c\001\001\000\002" +
    "\001\001\000\006\023\u0179\044\u0177\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\012\176\013\173\014\204\016" +
    "\u0188\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\012\074\013\071\014\064\015\u0184\001\001\000\012\012" +
    "\074\013\071\014\064\015\u0183\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\012\176\013\173" +
    "\014\204\016\u018a\001\001\000\002\001\001\000\012\012" +
    "\176\013\173\014\204\016\u018e\001\001\000\012\012\176" +
    "\013\173\014\204\016\u018d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\057\u0191\072\u017c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\014\u019b\001\001\000\004\014\u0199\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\u01a1\001\001\000\006\031\u01a2\043\u01a4" +
    "\001\001\000\004\010\u01ba\001\001\000\006\056\u01b8\071" +
    "\u01a6\001\001\000\002\001\001\000\006\056\u01a9\071\u01a6" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\056\u01b5\071\u01a6\001" +
    "\001\000\002\001\001\000\006\031\u01b7\043\u01a4\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\007\u01bd\001\001" +
    "\000\006\025\u01be\042\u01bf\001\001\000\004\010\u01f4\001" +
    "\001\000\002\001\001\000\006\055\u01f0\070\u01c6\001\001" +
    "\000\006\055\u01c5\070\u01c6\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\176\013\173\014" +
    "\204\016\u01d5\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\074\013\071\014\064\015\u01ce\001\001\000" +
    "\012\012\074\013\071\014\064\015\u01cd\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\012\176\013" +
    "\173\014\204\016\u01d7\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\055\u01de\070\u01c6\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\014\u01e5\001\001\000\004\014\u01e3\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\012" +
    "\176\013\173\014\204\016\u01e9\001\001\000\012\012\176" +
    "\013\173\014\204\016\u01e8\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\012\074\013\071" +
    "\014\064\015\u01ee\001\001\000\012\012\074\013\071\014" +
    "\064\015\u01ed\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\025\u01f3\042\u01bf\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\u01f7\001\001\000" +
    "\006\026\u01f9\046\u01fb\001\001\000\006\061\u0215\074\u0202" +
    "\001\001\000\004\010\u0214\001\001\000\006\061\u0201\074" +
    "\u0202\001\001\000\002\001\001\000\006\026\u01fd\046\u01fb" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\061\u0204\074\u0202\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\u0219\001\001\000\006\020\u021c\037\u021b\001\001\000\006" +
    "\052\u0241\065\u021e\001\001\000\002\001\001\000\004\010" +
    "\u023e\001\001\000\006\052\u0223\065\u021e\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\012\074" +
    "\013\071\014\064\015\u022e\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\012\074\013\071" +
    "\014\064\015\u0229\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\012\074\013\071\014\064\015\u022c\001\001" +
    "\000\002\001\001\000\012\012\074\013\071\014\064\015" +
    "\u022f\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\074\013\071\014" +
    "\064\015\u0233\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\012\074\013" +
    "\071\014\064\015\u0238\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\074\013\071\014\064\015\u023b\001" +
    "\001\000\002\001\001\000\006\052\u023d\065\u021e\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\020\u0240\037" +
    "\u021b\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\u0245\001\001\000" +
    "\006\021\u0247\040\u0248\001\001\000\004\066\u025a\001\001" +
    "\000\004\010\u0259\001\001\000\002\001\001\000\004\066" +
    "\u024a\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\012\074\013\071\014\064\015\u024e\001\001\000\012\012" +
    "\074\013\071\014\064\015\u024f\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\012\074\013\071\014\064\015" +
    "\u0253\001\001\000\012\012\074\013\071\014\064\015\u0252" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\021\u0258" +
    "\040\u0248\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\003\u025f\032\u0260" +
    "\001\001\000\004\005\u0289\001\001\000\002\001\001\000" +
    "\006\003\u025f\032\u0261\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\u0270\001\001\000\004\005" +
    "\u026b\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\u0281" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\u0292\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\003\u025f" +
    "\032\u029a\001\001\000\002\001\001\000\006\003\u025f\032" +
    "\u029e\001\001\000\006\003\u025f\032\u029d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\003\u025f\032\u02a3\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserSolicitudes$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserSolicitudes$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserSolicitudes$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private ArrayList<Advertencia> listaErrores;
    private ArrayList<Instruccion> listaInstrucciones;
    private ArrayList<String> listaParametros;
    private ArrayList<String> listaParametrosClase;
    private int punteroErrores;
    private int bloque = 0, linea, columna;
    private String clase = "";
    private String p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11;

    public ParserSolicitudes(SolicitudesLexer lexer, ArrayList<Advertencia> listaErrores, ArrayList<Instruccion> listaInstrucciones) {
        super(lexer);
        this.listaErrores = listaErrores;
        this.listaInstrucciones = listaInstrucciones;
        this.listaParametros = new ArrayList<>();
        this.listaParametrosClase = new ArrayList<>();
    }
    public void report_error(String message, Object info) {
        System.out.println("reporterror");
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal " + info);
    }
    @Override
    public void syntax_error(Symbol s) {
        System.out.println("linea: " + s.left + "   columna: " + s.right);
        Advertencia advert = new Advertencia((String)s.value, s.left, s.right, "Sintáctico", "error sintáctico");
        listaErrores.add(advert);
        punteroErrores = listaErrores.size()-1;
    }
    protected int error_sync_size() {
        return 1;
    }

    public boolean verificacionBloque(String[] listaObligatorios, ArrayList<String> listaParametros) {
        boolean comprobante = true;
        for (String element: listaObligatorios) {
            if(!listaParametros.contains(element)) {
                Advertencia advert = new Advertencia("Elemento Faltante", linea, columna, element);
                System.out.println("Hace falta el parametro: " + element + " En el bloque de la linea " + linea);
                listaErrores.add(advert);
                comprobante = false;
            }
        }
        ArrayList<String> auxiliar = new ArrayList<>();
        for(String element: listaParametros) {
            if(listaParametros.indexOf(element) != listaParametros.lastIndexOf(element)) {
                System.out.println("Se ha repetido el parametro " + element + " en el bloque de la linea " + linea);
                Advertencia advert = new Advertencia("Elemento Repetido", linea, columna, element);
                listaErrores.add(advert);
                comprobante = false;
            }
        }
        
        return comprobante;
    }

    public boolean verificacionClase(ArrayList<String> listaParametros, String clase) {
        boolean comprobante = true;
        for(String element: listaParametros) {
            if(element.equals("\"OPCIONES\"")) {
                if(!clase.equals("\"CHECKBOX\"") && !clase.equals("\"RADIO\"") && !clase.equals("\"COMBO\"")) {
                    System.out.println("La instrucción \"OPCIONES\" del bloque de la linea "  + linea +  " no es valida para " + clase);
                    Advertencia advert = new Advertencia("Clase Invalida", linea, columna, "El parámetro " + element + " no es válido para la clase " + clase);
                    listaErrores.add(advert);
                    comprobante = false;
                }
            } else if(element.equals("\"FILAS\"")) {
                if(!clase.equals("\"AREA_TEXTO\"")) {
                    System.out.println("La instruccion \"FILAS\" del bloque de la linea "  + linea + " no es valida para " + clase);
                    Advertencia advert = new Advertencia("Clase Invalida", linea, columna, "El parámetro " + element + " no es válido para la clase " + clase);
                    listaErrores.add(advert);
                    comprobante = false;
                }
            } else if(element.equals("\"COLUMNAS\"")) {
                if(!clase.equals("\"AREA_TEXTO\"")) {
                    System.out.println("La instruccion \"COLUMNAS\" del bloque de la linea "  + linea + " no es valida para " + clase);
                    Advertencia advert = new Advertencia("Clase Invalida", linea, columna, "El parámetro " + element + " no es válido para la clase " + clase);
                    listaErrores.add(advert);
                    comprobante = false;
                }
            } else if(element.equals("\"URL\"")) {
                if(!clase.equals("\"IMAGEN\"")) {
                    System.out.println("La instruccion \"URL\" del bloque de la linea "  + linea + " no es valida para " + clase);
                    Advertencia advert = new Advertencia("Clase Invalida", linea, columna, "El parámetro " + element + " no es válido para la clase " + clase);
                    listaErrores.add(advert);
                    comprobante = false;
                }
            }
        }
        /*if(clase.equals("IMAGEN")) {
            if(!listaParametros.contains("URL")) {
                Advertencia advert = new Advertencia("Elemento Faltante", linea, columna, "\"URL\"");
                listaErrores.add(advert);
                comprobante = false;
            }
        } else if (!clase.equals("BOTON")) {
            if(!listaParametros.contains("NOMBRE_CAMPO")) {
                Advertencia advert = new Advertencia("Elemento Faltante", linea, columna, "\"NOMBRE_CAMPO\"");
                listaErrores.add(advert);
                comprobante = false;
            }
        }*/
        return comprobante;
    }
    public boolean verificacionModificacionFormulario() {
        for(String element: listaParametros) {
            if(element.equals("\"TITULO\"") || element.equals("\"NOMBRE\"") || element.equals("\"TEMA\"")) {
                return true;
            }
        }
        Advertencia advert = new Advertencia("Elemento Faltante", linea, columna, "que se desea modificar en el formulario (puede ser: \"TITULO\", \"NOMBRE\" o \"TEMA\"). ");
        listaErrores.add(advert);
        return false;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserSolicitudes$actions {
  private final ParserSolicitudes parser;

  /** Constructor */
  CUP$ParserSolicitudes$actions(ParserSolicitudes parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserSolicitudes$do_action_part00000000(
    int                        CUP$ParserSolicitudes$act_num,
    java_cup.runtime.lr_parser CUP$ParserSolicitudes$parser,
    java.util.Stack            CUP$ParserSolicitudes$stack,
    int                        CUP$ParserSolicitudes$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserSolicitudes$result;

      /* select the action based on the action number */
      switch (CUP$ParserSolicitudes$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)).value;
		RESULT = start_val;
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserSolicitudes$parser.done_parsing();
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= solicitud 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= solicitudes 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // solicitudes ::= MENOR_QUE EXCLAMACION INI_SOLICITUDES MAYOR_QUE instruccion_solicitudes 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitudes",2, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-4)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // solicitudes ::= error EXCLAMACION INI_SOLICITUDES MAYOR_QUE instruccion_solicitudes 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo'<' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitudes",2, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-4)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // solicitudes ::= MENOR_QUE error INI_SOLICITUDES MAYOR_QUE instruccion_solicitudes 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo '!' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitudes",2, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-4)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // solicitudes ::= MENOR_QUE EXCLAMACION error MAYOR_QUE instruccion_solicitudes 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta la palabra reservada \"INI_SOLICITUDES\" en la instruccion");
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitudes",2, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-4)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // solicitudes ::= MENOR_QUE EXCLAMACION INI_SOLICITUDES error instruccion_solicitudes 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo '>' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitudes",2, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-4)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // solicitudes ::= error instruccion_solicitudes 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se espeaba exáctamente la instruccion '< ! \"INI_SOLICITUDES\" >', revise si la instrucción fue escrita correctamente"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitudes",2, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // instruccion_solicitudes ::= solicitud instruccion_solicitudes 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_solicitudes",24, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // instruccion_solicitudes ::= MENOR_QUE EXCLAMACION FIN_SOLICITUDES MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_solicitudes",24, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-3)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // instruccion_solicitudes ::= error EXCLAMACION FIN_SOLICITUDES MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '<' en la instruccion"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_solicitudes",24, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-3)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // instruccion_solicitudes ::= MENOR_QUE error FIN_SOLICITUDES MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '!' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_solicitudes",24, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-3)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // instruccion_solicitudes ::= MENOR_QUE EXCLAMACION error MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la palabra reservada \"FIN_SOLICITUDES\" en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_solicitudes",24, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-3)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // instruccion_solicitudes ::= MENOR_QUE EXCLAMACION FIN_SOLICITUDES error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '>' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_solicitudes",24, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-3)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // instruccion_solicitudes ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exáctamente la instrucción '< ! \"FIN_SOLICITUDES\" >'"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_solicitudes",24, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // solicitud ::= error EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo'<' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // solicitud ::= MENOR_QUE error INI_SOLICITUD PUNTOS tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo'!' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // solicitud ::= MENOR_QUE EXCLAMACION error PUNTOS tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta la palabra reservada \"INI_SOLICITUD\" en la instruccion");
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD error tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // solicitud ::= error tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se espeaba exáctamente la instruccion '< ! \"INI_SOLICITUD\" :', revise si la instrucción fue escrita correctamente"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud error FIN_SOLICITUD EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo'<' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud MENOR_QUE error EXCLAMACION MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la palabra reservada \"FIN_SOLICITUD\" en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud MENOR_QUE FIN_SOLICITUD error MAYOR_QUE 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '!' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud MENOR_QUE FIN_SOLICITUD EXCLAMACION error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Falta un simbolo '>' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // solicitud ::= MENOR_QUE EXCLAMACION INI_SOLICITUD PUNTOS tipo_solicitud error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exáctamente la instrucción '< \"FIN_SOLICITUD\" ! >'"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // tipo_solicitud ::= CREAR_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_creacion_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("CREACION DE USUARIO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_solicitud ::= MODIFICAR_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_modificacion_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("MODIFICACION DE USUARIO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_solicitud ::= ELIMINAR_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_eliminacion_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("ELIMINACION DE USUARIO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_solicitud ::= LOGIN_USUARIO apertura_instruccion_principal1 CREDENCIALES_USUARIO apertura_instruccion_principal2 instruccion_login_usuario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("LOGIN USUARIO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // tipo_solicitud ::= NUEVO_FORMULARIO apertura_instruccion_principal1 PARAMETROS_FORMULARIO apertura_instruccion_principal2 instruccion_nuevo_formulario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("NUEVO FORMULARIO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // tipo_solicitud ::= ELIMINAR_FORMULARIO apertura_instruccion_principal1 PARAMETROS_FORMULARIO apertura_instruccion_principal2 instruccion_eliminacion_formulario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("ELIMINAR FORMULARIO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // tipo_solicitud ::= MODIFICAR_FORMULARIO apertura_instruccion_principal1 PARAMETROS_FORMULARIO apertura_instruccion_principal2 instruccion_modificacion_formulario cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("MODIFICAR FORMULARIO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // tipo_solicitud ::= AGREGAR_COMPONENTE apertura_instruccion_principal1 PARAMETROS_COMPONENTE apertura_instruccion_principal2 instruccion_agregar_componente cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("AGREGAR COMPONENTE"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // tipo_solicitud ::= ELIMINAR_COMPONENTE apertura_instruccion_principal1 PARAMETROS_COMPONENTE apertura_instruccion_principal2 instruccion_eliminacion_componente cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("ELIMINAR COMPONENTE"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // tipo_solicitud ::= MODIFICAR_COMPONENTE apertura_instruccion_principal1 PARAMETROS_COMPONENTE apertura_instruccion_principal2 instruccion_modificacion_componente cierre_instruccion_principal 
            {
              Object RESULT =null;
		 System.out.println("MODIFICAR COMPONENTE"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // tipo_solicitud ::= CONSULTAR_DATOS apertura_instruccion_principal1 CONSULTAS apertura_instruccion_principal2 instruccion_consultar_datos cierre_instruccion_principal 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",3, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-5)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // apertura_instruccion_principal1 ::= MAYOR_QUE LLAVE_A 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // apertura_instruccion_principal1 ::= error LLAVE_A 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '>' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // apertura_instruccion_principal1 ::= MAYOR_QUE error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '{' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // apertura_instruccion_principal1 ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaban los simbolos '>' y '{' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal1",4, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // apertura_instruccion_principal2 ::= PUNTOS CORCHETE_A 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal2",5, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // apertura_instruccion_principal2 ::= error CORCHETE_A 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal2",5, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // apertura_instruccion_principal2 ::= PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '{' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal2",5, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // apertura_instruccion_principal2 ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaban los simbolos ':' y '[' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("apertura_instruccion_principal2",5, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // cierre_instruccion_principal ::= CORCHETE_C LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("cierre_instruccion_principal",6, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // cierre_instruccion_principal ::= error LLAVE_C 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ']' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("cierre_instruccion_principal",6, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // cierre_instruccion_principal ::= CORCHETE_C error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '}' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("cierre_instruccion_principal",6, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // cierre_instruccion_principal ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaban los simbolos ']' y '}' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("cierre_instruccion_principal",6, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // instruccion_creacion_usuario ::= accion_crear_usuario COMA instruccion_creacion_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_creacion_usuario",13, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // instruccion_creacion_usuario ::= accion_crear_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_creacion_usuario",13, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // accion_crear_usuario ::= LLAVE_A accion_crear_usuario_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		 
                                                                                    linea = llaAleft;
                                                                                    columna = llaAright;
                                                                                    String[] listaObligatorios = {"\"USUARIO\"", "\"PASSWORD\""};
                                                                                    if(verificacionBloque(listaObligatorios, listaParametros)){
                                                                                        InstruccionCrearUsuario inst = new InstruccionCrearUsuario();
                                                                                        inst.setUsuario(p1.substring(1, p1.length()-1)); 
                                                                                        inst.setPassword(p2.substring(1, p2.length()-1));
                                                                                        if (p3 != null) {
                                                                                            inst.setFechaCreacion(p3.substring(1, p3.length()-1));
                                                                                        }
                                                                                        listaInstrucciones.add(inst);
                                                                                    }
                                                                                    listaParametros.clear();
                                                                                    p1 = null; p2 = null; p3 = null;
                                                                                
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario",28, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // accion_crear_usuario ::= error accion_crear_usuario_p LLAVE_C 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '{' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario",28, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // accion_crear_usuario ::= LLAVE_A accion_crear_usuario_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario",28, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // accion_crear_usuario_p ::= opciones_crear_usuario COMA accion_crear_usuario_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario_p",39, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // accion_crear_usuario_p ::= opciones_crear_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_crear_usuario_p",39, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // opciones_crear_usuario ::= USUARIO PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int usrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int usrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object usr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(usr.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // opciones_crear_usuario ::= PASSWORD PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int pswleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pswright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object psw = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(psw.toString()); p2 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // opciones_crear_usuario ::= FECHA_CREACION PUNTOS FECHA 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object fc = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(fc.toString()); p3 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // opciones_crear_usuario ::= error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parámetro a asignar valor en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // opciones_crear_usuario ::= error PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro valido para asignar valor seguido del símbolo ':' "); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // opciones_crear_usuario ::= USUARIO error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // opciones_crear_usuario ::= PASSWORD error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // opciones_crear_usuario ::= USUARIO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido a asignar a un usuario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // opciones_crear_usuario ::= USUARIO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un usuario, revise si el valor a asignar contiene caracteres inválidos o si hace falta el simbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // opciones_crear_usuario ::= PASSWORD PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a una contraseña, revise si el valor a asignar contiene caracteres inválidos o si hace falta la coma de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // opciones_crear_usuario ::= PASSWORD error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a una fecha de creación, revise si la fecha ingresada pertenece al calendario, si la misma contiene caracteres inválidos o si hace falta la coma de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // opciones_crear_usuario ::= FECHA_CREACION PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // opciones_crear_usuario ::= FECHA_CREACION error FECHA 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // opciones_crear_usuario ::= FECHA_CREACION error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción y una fecha válda a asignar a la fecha de creación"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // opciones_crear_usuario ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instucción: \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_crear_usuario",50, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // instruccion_modificacion_usuario ::= accion_modificacion_usuario COMA instruccion_modificacion_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_usuario",14, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // instruccion_modificacion_usuario ::= accion_modificacion_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_usuario",14, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // accion_modificacion_usuario ::= LLAVE_A accion_modificacion_usuario_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                        linea = llaAleft;
                                                                                        columna = llaAright;
                                                                                        String[] listaObligatorios = {"\"USUARIO_ANTIGUO\"", "\"USUARIO_NUEVO\"", "\"NUEVO_PASSWORD\""};
                                                                                        if(verificacionBloque(listaObligatorios, listaParametros)){
                                                                                            InstruccionModificarUsuario inst = new InstruccionModificarUsuario();
                                                                                            inst.setUsuarioAntiguo(p1.substring(1, p1.length()-1));
                                                                                            inst.setUsuarioNuevo(p2.substring(1, p2.length()-1));
                                                                                            inst.setNuevoPassword(p3.substring(1, p3.length()-1));
                                                                                            if(p4 != null) {
                                                                                                inst.setFechaModificacion(p4.substring(1, p4.length()-1));
                                                                                            }
                                                                                            listaInstrucciones.add(inst);
                                                                                        }
                                                                                        listaParametros.clear();
                                                                                        p1 = null; p2 = null; p3 = null; p4 = null;
                                                                                    
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario",29, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // accion_modificacion_usuario ::= error accion_modificacion_usuario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario",29, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // accion_modificacion_usuario ::= LLAVE_A accion_modificacion_usuario_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario",29, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // accion_modificacion_usuario_p ::= opciones_modificacion_usuario COMA accion_modificacion_usuario_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario_p",40, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // accion_modificacion_usuario_p ::= opciones_modificacion_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_usuario_p",40, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // opciones_modificacion_usuario ::= USUARIO_ANTIGUO PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // opciones_modificacion_usuario ::= USUARIO_NUEVO PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p2 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // opciones_modificacion_usuario ::= NUEVO_PASSWORD PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p3 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // opciones_modificacion_usuario ::= FECHA_MODIFICACION PUNTOS FECHA 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p4 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // opciones_modificacion_usuario ::= error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parámetro a asignar valor en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // opciones_modificacion_usuario ::= error PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro valido para asignar valor seguido del símbolo ':' "); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // opciones_modificacion_usuario ::= USUARIO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un usuario, revise si el valor a asignar contiene caracteres invalidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // opciones_modificacion_usuario ::= USUARIO error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // opciones_modificacion_usuario ::= USUARIO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un usuario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // opciones_modificacion_usuario ::= PASSWORD PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a una contraseña, revise si el valor a asignar contiene caracteres invalidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // opciones_modificacion_usuario ::= PASSWORD error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // opciones_modificacion_usuario ::= PASSWORD error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a una contraseña"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // opciones_modificacion_usuario ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_usuario",51, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // instruccion_eliminacion_usuario ::= accion_eliminacion_usuario COMA instruccion_eliminacion_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_usuario",15, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // instruccion_eliminacion_usuario ::= accion_eliminacion_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_usuario",15, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // accion_eliminacion_usuario ::= LLAVE_A opciones_eliminacion_usuario LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                    linea = llaAleft;
                                                                                                    columna = llaAright;
                                                                                                    String[] listaObligatorios = {"\"USUARIO\""};
                                                                                                    if(verificacionBloque(listaObligatorios, listaParametros)) {
                                                                                                        InstruccionEliminarUsuario inst = new InstruccionEliminarUsuario();
                                                                                                        inst.setUsuario(p1.substring(1, p1.length()-1));
                                                                                                        listaInstrucciones.add(inst);
                                                                                                    }
                                                                                                    listaParametros.clear();
                                                                                                    p1 = null;
                                                                                                
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_usuario",30, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // accion_eliminacion_usuario ::= error opciones_eliminacion_usuario LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_usuario",30, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // accion_eliminacion_usuario ::= LLAVE_A opciones_eliminacion_usuario error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_usuario",30, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // opciones_eliminacion_usuario ::= USUARIO PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",52, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // opciones_eliminacion_usuario ::= error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parametro al cual se le asignará valor"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",52, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // opciones_eliminacion_usuario ::= error PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro valido para asignar valor seguido del símbolo ':' "); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",52, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // opciones_eliminacion_usuario ::= USUARIO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un usuario, revise si el valor a asignar contiene caracteres invalidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",52, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // opciones_eliminacion_usuario ::= USUARIO error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",52, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // opciones_eliminacion_usuario ::= USUARIO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un usuario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",52, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // opciones_eliminacion_usuario ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASOGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_usuario",52, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // instruccion_login_usuario ::= accion_login_usuario COMA instruccion_login_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_login_usuario",16, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // instruccion_login_usuario ::= accion_login_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_login_usuario",16, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // accion_login_usuario ::= LLAVE_A accion_login_usuario_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                linea = llaAleft;
                                                                                                columna = llaAright;
                                                                                                String[] listaObligatorios = {"\"USUARIO\"", "\"PASSWORD\""};
                                                                                                if(verificacionBloque(listaObligatorios, listaParametros)) {
                                                                                                    InstruccionLoginUsuario inst = new InstruccionLoginUsuario();
                                                                                                    inst.setUsuario(p1.substring(1, p1.length()-1)); 
                                                                                                    inst.setPassword(p2.substring(1, p2.length()-1));
                                                                                                    listaInstrucciones.add(inst);
                                                                                                }
                                                                                                listaParametros.clear();
                                                                                                p1 = null; p2 = null;
                                                                                            
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_login_usuario",31, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // accion_login_usuario ::= error accion_login_usuario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_login_usuario",31, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // accion_login_usuario ::= LLAVE_A accion_login_usuario_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_login_usuario",31, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // accion_login_usuario_p ::= opciones_login_usuario COMA accion_login_usuario_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_login_usuario_p",42, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // accion_login_usuario_p ::= opciones_login_usuario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_login_usuario_p",42, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // opciones_login_usuario ::= USUARIO PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // opciones_login_usuario ::= PASSWORD PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p2 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // opciones_login_usuario ::= error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parametro al cual se le asignará valor"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // opciones_login_usuario ::= error PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro válido para asignar valor, seguido del símbolo ':'"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // opciones_login_usuario ::= USUARIO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un usuario, revise si el valor a asignar contiene caracteres inválidos o si hace falta el simbolo ',' o '}' de fin de instrucción "); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // opciones_login_usuario ::= USUARIO error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // opciones_login_usuario ::= USUARIO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un usuario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // opciones_login_usuario ::= PASSWORD PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a una contraseña, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' p '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // opciones_login_usuario ::= PASSWORD error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // opciones_login_usuario ::= PASSWORD error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // opciones_login_usuario ::= error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_login_usuario",53, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // instruccion_nuevo_formulario ::= accion_nuevo_formulario COMA instruccion_nuevo_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_nuevo_formulario",19, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // instruccion_nuevo_formulario ::= accion_nuevo_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_nuevo_formulario",19, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // accion_nuevo_formulario ::= LLAVE_A accion_nuevo_formulario_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                linea = llaAleft;
                                                                                                columna = llaAright;
                                                                                                String[] listaObligatorios = {"\"ID\"", "\"TITULO\"", "\"NOMBRE\"", "\"TEMA\""};
                                                                                                if (verificacionBloque(listaObligatorios, listaParametros)) {
                                                                                                    InstruccionNuevoFormulario inst = new InstruccionNuevoFormulario();
                                                                                                    inst.setId(p1.substring(1, p1.length()-1)); 
                                                                                                    inst.setTitulo(p2.substring(1, p2.length()-1));
                                                                                                    inst.setNombre(p3.substring(1, p3.length()-1)); 
                                                                                                    inst.setTema(p4.substring(1, p4.length()-1));
                                                                                                    if(p5 != null) {
                                                                                                        inst.setUsuarioCreacion(p5.substring(1, p5.length()-1));
                                                                                                    } 
                                                                                                    if(p6 != null) {
                                                                                                        inst.setFechaCreacion(p6.substring(1, p6.length()-1));
                                                                                                    }
                                                                                                    listaInstrucciones.add(inst);
                                                                                                    listaParametros.clear();
                                                                                                    p1 = null; p2 =null; p3 = null; p4 =null; p5 = null; p6 =null;
                                                                                                }
                                                                                            
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // accion_nuevo_formulario ::= error accion_nuevo_formulario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // accion_nuevo_formulario ::= LLAVE_A accion_nuevo_formulario_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario",32, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // accion_nuevo_formulario_p ::= opciones_nuevo_formulario COMA accion_nuevo_formulario_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario_p",43, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // accion_nuevo_formulario_p ::= opciones_nuevo_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_nuevo_formulario_p",43, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // opciones_nuevo_formulario ::= ID PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // opciones_nuevo_formulario ::= TITULO PUNTOS tipos_entrada_complete 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p2 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // opciones_nuevo_formulario ::= NOMBRE PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p3 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // opciones_nuevo_formulario ::= TEMA PUNTOS theme 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p4 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // opciones_nuevo_formulario ::= USUARIO_CREACION PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p5 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // opciones_nuevo_formulario ::= FECHA_CREACION PUNTOS FECHA 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p6 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // opciones_nuevo_formulario ::= error tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parametro al cual se le asignará valor"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // opciones_nuevo_formulario ::= error PUNTOS tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro válido para asignar valor, seguido del símbolo ':'"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // opciones_nuevo_formulario ::= ID PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un identificador, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // opciones_nuevo_formulario ::= ID error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // opciones_nuevo_formulario ::= ID error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un identificador"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // opciones_nuevo_formulario ::= TITULO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un titulo, revise si el valor a asignar contiene caracteres inválidos o si hace falta el simbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // opciones_nuevo_formulario ::= TITULO error tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // opciones_nuevo_formulario ::= TITULO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un título"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // opciones_nuevo_formulario ::= NOMBRE PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un nombre, revise si el valor a asignar contiene caracteres inválidos o si hace falta el simnolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // opciones_nuevo_formulario ::= NOMBRE error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // opciones_nuevo_formulario ::= NOMBRE error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un nombre"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // opciones_nuevo_formulario ::= TEMA PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un tema, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de insrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // opciones_nuevo_formulario ::= TEMA error theme 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // opciones_nuevo_formulario ::= TEMA error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un tema"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // opciones_nuevo_formulario ::= USUARIO_CREACION PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un usuario, revise si el valor a asignar contiene caracterews inválidos o si hace falta el simbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // opciones_nuevo_formulario ::= USUARIO_CREACION error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // opciones_nuevo_formulario ::= USUARIO_CREACION error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a un usuario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // opciones_nuevo_formulario ::= FECHA_CREACION PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a una fecha, revise si el valor a asignar contiene caracteres inválidos o si hace falta el síbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // opciones_nuevo_formulario ::= FECHA_CREACION error FECHA 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // opciones_nuevo_formulario ::= FECHA_CREACION error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' y un valor válido para ser asignado a una fecha"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // opciones_nuevo_formulario ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_nuevo_formulario",54, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // theme ::= DARK 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("theme",10, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // theme ::= WHITE 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("theme",10, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // instruccion_eliminacion_formulario ::= accion_eliminacion_formulario COMA instruccion_eliminacion_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_formulario",23, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // instruccion_eliminacion_formulario ::= accion_eliminacion_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_formulario",23, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // accion_eliminacion_formulario ::= LLAVE_A accion_eliminacion_formulario_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                    linea = llaAleft;
                                                                                                    columna = llaAright;
                                                                                                    String[] listaObligatorios = {"\"ID\""};
                                                                                                    if(verificacionBloque(listaObligatorios, listaParametros)) {
                                                                                                        InstruccionEliminarFormulario inst = new InstruccionEliminarFormulario();
                                                                                                        inst.setIdFormulario(p1.substring(1, p1.length()-1));
                                                                                                        listaInstrucciones.add(inst);
                                                                                                    }
                                                                                                    listaParametros.clear();
                                                                                                    p1 = null;
                                                                                                
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_formulario",33, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // accion_eliminacion_formulario ::= error accion_eliminacion_formulario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_formulario",33, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // accion_eliminacion_formulario ::= LLAVE_A accion_eliminacion_formulario_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_formulario",33, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // accion_eliminacion_formulario_p ::= opciones_eliminacion_formulario COMA accion_eliminacion_formulario_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_formulario_p",44, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // accion_eliminacion_formulario_p ::= opciones_eliminacion_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_formulario_p",44, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // opciones_eliminacion_formulario ::= ID PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_formulario",55, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // opciones_eliminacion_formulario ::= error PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parametro al cual se le asignará valor"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_formulario",55, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // opciones_eliminacion_formulario ::= error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro válido para asignar valor, seguido del simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_formulario",55, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // opciones_eliminacion_formulario ::= ID PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un identificador, revse si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_formulario",55, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // opciones_eliminacion_formulario ::= ID error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_formulario",55, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // opciones_eliminacion_formulario ::= ID error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un identificador"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_formulario",55, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // opciones_eliminacion_formulario ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_formulario",55, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // instruccion_modificacion_formulario ::= accion_modificacion_formulario COMA instruccion_modificacion_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_formulario",17, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // instruccion_modificacion_formulario ::= accion_modificacion_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_formulario",17, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // accion_modificacion_formulario ::= LLAVE_A accion_modificacion_formulario_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                    linea = llaAleft;
                                                                                                    columna = llaAright;
                                                                                                    String[] listaObligatorios = {"\"ID\""};
                                                                                                    if(verificacionBloque(listaObligatorios, listaParametros)) {
                                                                                                        if(verificacionModificacionFormulario()) {
                                                                                                            InstruccionModificarFormulario inst = new InstruccionModificarFormulario();
                                                                                                            inst.setId(p1.substring(1, p1.length()-1));
                                                                                                            if(p2 != null) {
                                                                                                                inst.setTitulo(p2.substring(1, p2.length()-1));
                                                                                                            }
                                                                                                            if(p3 != null) {
                                                                                                                inst.setNombre(p3.substring(1, p3.length()-1));
                                                                                                            }
                                                                                                            if(p4 != null) {
                                                                                                                inst.setTema(p4.substring(1, p4.length()-1));
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    listaParametros.clear();
                                                                                                
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_formulario",34, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // accion_modificacion_formulario ::= error accion_modificacion_formulario_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_formulario",34, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // accion_modificacion_formulario ::= LLAVE_A accion_modificacion_formulario_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_formulario",34, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // accion_modificacion_formulario_p ::= opciones_modificacion_formulario COMA accion_modificacion_formulario_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_formulario_p",45, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // accion_modificacion_formulario_p ::= opciones_modificacion_formulario 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_formulario_p",45, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // opciones_modificacion_formulario ::= ID PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // opciones_modificacion_formulario ::= TITULO PUNTOS tipos_entrada_complete 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p2 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // opciones_modificacion_formulario ::= NOMBRE PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p3 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // opciones_modificacion_formulario ::= TEMA PUNTOS theme 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p4 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // opciones_modificacion_formulario ::= error PUNTOS tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parametro al cual se le asignará valor"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // opciones_modificacion_formulario ::= error tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro válido para asignar valor, seguido del símbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // opciones_modificacion_formulario ::= ID PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un identificador, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // opciones_modificacion_formulario ::= ID error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // opciones_modificacion_formulario ::= ID error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignadoa un identificador"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // opciones_modificacion_formulario ::= TITULO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un titulo, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // opciones_modificacion_formulario ::= TITULO error tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // opciones_modificacion_formulario ::= TITULO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un título"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // opciones_modificacion_formulario ::= NOMBRE PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un nombre, revise si el valor a asignar contiene caracteres inválidos o si hace falta el simbolo '.' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // opciones_modificacion_formulario ::= NOMBRE error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // opciones_modificacion_formulario ::= NOMBRE error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un nombre"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // opciones_modificacion_formulario ::= TEMA PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un tema, revise si el valor a asignar contiene caracteres inválido o si hace falta el simbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // opciones_modificacion_formulario ::= TEMA error theme 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // opciones_modificacion_formulario ::= TEMA error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un tema"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // opciones_modificacion_formulario ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_formulario",56, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // instruccion_agregar_componente ::= accion_agregar_componente COMA instruccion_agregar_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_agregar_componente",18, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // instruccion_agregar_componente ::= accion_agregar_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_agregar_componente",18, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // accion_agregar_componente ::= LLAVE_A accion_agregar_componente_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                    linea = llaAleft;
                                                                                                    columna = llaAright;
                                                                                                    String[] listaObligatorios = {"\"ID\"", "\"FORMULARIO\"", "\"CLASE\"", "\"TEXTO_VISIBLE\""};
                                                                                                    if(verificacionBloque(listaObligatorios, listaParametros)){
                                                                                                        if(verificacionClase(listaParametros, clase)) {
                                                                                                            InstruccionAgregarComponente inst = new InstruccionAgregarComponente();
                                                                                                            inst.setId(p1.substring(1, p1.length()-1));
                                                                                                            inst.setFormulario(p3.substring(1, p3.length()-1));
                                                                                                            inst.setClase(p4.substring(1, p4.length()-1));
                                                                                                            inst.setTextoVisible(p5.substring(1, p5.length()-1));
                                                                                                            if(p2 != null) {
                                                                                                                inst.setNombreCampo(p2.substring(1, p2.length()-1));
                                                                                                            }
                                                                                                            if(p6 != null) {
                                                                                                                inst.setAlineacion(p6.substring(1, p6.length()-1));
                                                                                                            }
                                                                                                            if(p7 != null) {
                                                                                                                inst.setRequerido(p7.substring(1, p7.length()-1));
                                                                                                              }
                                                                                                            if(p8 != null) {
                                                                                                                inst.setOpciones(p8.substring(1, p8.length()-1));
                                                                                                            }
                                                                                                            if(p9 != null) {
                                                                                                                inst.setFilas(p9.substring(1, p9.length()-1));
                                                                                                            }
                                                                                                            if(p10 != null) {
                                                                                                                inst.setColumnas(p10.substring(1, p10.length()-1));
                                                                                                            }
                                                                                                            if(p11 != null) {
                                                                                                                inst.setUrl(p11.substring(1, p11.length()-1));
                                                                                                            }
                                                                                                            listaInstrucciones.add(inst);
                                                                                                        }
                                                                                                    }
                                                                                                    p1 = null; p2 = null; p3 = null; p4 = null; p5 = null; p6 = null; p7 = null; p8 = null; p9 = null; p10 = null; p11 = null; 
                                                                                                    listaParametros.clear();
                                                                                                    listaParametrosClase.clear();
                                                                                                
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_agregar_componente",35, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // accion_agregar_componente ::= error accion_agregar_componente_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_agregar_componente",35, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // accion_agregar_componente ::= LLAVE_A accion_agregar_componente_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_agregar_componente",35, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // accion_agregar_componente_p ::= opciones_agregar_componente COMA accion_agregar_componente_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_agregar_componente_p",46, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // accion_agregar_componente_p ::= opciones_agregar_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_agregar_componente_p",46, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // opciones_agregar_componente ::= ID PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p1 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // opciones_agregar_componente ::= NOMBRE_CAMPO PUNTOS tipos_entrada 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p2 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // opciones_agregar_componente ::= FORMULARIO PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p3 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // opciones_agregar_componente ::= CLASE PUNTOS tipo_clase 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int tcleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int tcright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object tc = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p4 = tc.toString(); clase = tc.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // opciones_agregar_componente ::= TEXTO_VISIBLE PUNTOS tipos_entrada_complete 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p5 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // opciones_agregar_componente ::= ALINEACION PUNTOS tipo_alineacion 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p6 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // opciones_agregar_componente ::= REQUERIDO PUNTOS required 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p7 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // opciones_agregar_componente ::= OPCIONES PUNTOS OPTIONS 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p8 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // opciones_agregar_componente ::= FILAS PUNTOS NUMERO 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p9 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // opciones_agregar_componente ::= COLUMNAS PUNTOS NUMERO 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p10 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // opciones_agregar_componente ::= URL PUNTOS tipos_entrada_complete 
            {
              Object RESULT =null;
		int parleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int parright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object par = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entrleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entrright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object entr = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(par.toString()); p11 = entr.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // opciones_agregar_componente ::= error PUNTOS tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parametro al cual se le asignará valor"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // opciones_agregar_componente ::= error tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro válido para asignar valor, seguido del símbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // opciones_agregar_componente ::= ID PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un identificador, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // opciones_agregar_componente ::= ID error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // opciones_agregar_componente ::= ID error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un identificador"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // opciones_agregar_componente ::= NOMBRE_CAMPO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un nombre de campo, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // opciones_agregar_componente ::= NOMBRE_CAMPO error tipos_entrada 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // opciones_agregar_componente ::= NOMBRE_CAMPO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un nombre de campo"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // opciones_agregar_componente ::= FORMULARIO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un formulario, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // opciones_agregar_componente ::= FORMULARIO error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // opciones_agregar_componente ::= FORMULARIO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un formulario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // opciones_agregar_componente ::= CLASE PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a una clase, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // opciones_agregar_componente ::= CLASE error tipo_clase 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // opciones_agregar_componente ::= CLASE error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a una clase"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // opciones_agregar_componente ::= TEXTO_VISIBLE PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado al texto visible, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // opciones_agregar_componente ::= TEXTO_VISIBLE error tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // opciones_agregar_componente ::= TEXTO_VISIBLE error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado al texto visible"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // opciones_agregar_componente ::= ALINEACION PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a una alineacion, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // opciones_agregar_componente ::= ALINEACION error tipo_alineacion 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // opciones_agregar_componente ::= ALINEACION error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a una alineacion"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // opciones_agregar_componente ::= REQUERIDO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un parametro requerido, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // opciones_agregar_componente ::= REQUERIDO error required 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // opciones_agregar_componente ::= REQUERIDO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un parametro requerido"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // opciones_agregar_componente ::= OPCIONES PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un parametro opciones, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // opciones_agregar_componente ::= OPCIONES error OPTIONS 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // opciones_agregar_componente ::= OPCIONES error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a opciones"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // opciones_agregar_componente ::= FILAS PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un parametro filas, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // opciones_agregar_componente ::= FILAS error NUMERO 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // opciones_agregar_componente ::= FILAS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a filas"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // opciones_agregar_componente ::= COLUMNAS PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un parametro columnas, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // opciones_agregar_componente ::= COLUMNAS error NUMERO 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // opciones_agregar_componente ::= COLUMNAS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a columnas"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // opciones_agregar_componente ::= URL PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un parametro URL, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // opciones_agregar_componente ::= URL error tipos_entrada_complete 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // opciones_agregar_componente ::= URL error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a URL"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // opciones_agregar_componente ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_agregar_componente",57, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // tipo_clase ::= CAMPO_TEXTO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // tipo_clase ::= AREA_TEXTO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // tipo_clase ::= CHECKBOX 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // tipo_clase ::= RADIO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // tipo_clase ::= FICHERO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // tipo_clase ::= IMAGEN 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // tipo_clase ::= COMBO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // tipo_clase ::= BOTON 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT=val; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_clase",7, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // tipo_alineacion ::= CENTRO 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_alineacion",9, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // tipo_alineacion ::= IZQUIERDA 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_alineacion",9, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // tipo_alineacion ::= DERECHA 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_alineacion",9, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // tipo_alineacion ::= JUSTIFICAR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipo_alineacion",9, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // required ::= SI 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("required",8, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // required ::= NO 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("required",8, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // instruccion_eliminacion_componente ::= accion_eliminacion_componente COMA instruccion_eliminacion_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_componente",20, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // instruccion_eliminacion_componente ::= accion_eliminacion_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_eliminacion_componente",20, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // accion_eliminacion_componente ::= LLAVE_A accion_eliminacion_componente_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                        linea = llaAleft;
                                                                                                        columna = llaAright;
                                                                                                        String[] listaObligatorios = {"\"ID\"", "\"FORMULARIO\""};
                                                                                                        if(verificacionBloque(listaObligatorios, listaParametros)) {
                                                                                                            InstruccionElliminarComponente inst = new InstruccionElliminarComponente();
                                                                                                            inst.setIdComponente(p1.substring(1, p1.length()-1));
                                                                                                            inst.setIdFormulario(p2.substring(1, p2.length()-1));
                                                                                                            listaInstrucciones.add(inst);
                                                                                                        }
                                                                                                        listaParametros.clear();
                                                                                                        p1 = null; p2 = null;
                                                                                                    
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_componente",36, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // accion_eliminacion_componente ::= error accion_eliminacion_componente_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_componente",36, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // accion_eliminacion_componente ::= LLAVE_A accion_eliminacion_componente_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_componente",36, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // accion_eliminacion_componente_p ::= opciones_eliminacion_componente COMA accion_eliminacion_componente_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_componente_p",47, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // accion_eliminacion_componente_p ::= opciones_eliminacion_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_eliminacion_componente_p",47, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // opciones_eliminacion_componente ::= ID PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p1 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // opciones_eliminacion_componente ::= FORMULARIO PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 listaParametros.add(para.toString()); p2 = ent.toString(); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // opciones_eliminacion_componente ::= error PUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("No se reconoce el tipo de parametro al cual se le asignará valor"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // opciones_eliminacion_componente ::= error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un parametro válido para asignar valor, seguido del símbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // opciones_eliminacion_componente ::= ID PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un identificador, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // opciones_eliminacion_componente ::= ID error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // opciones_eliminacion_componente ::= ID error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un identificador"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // opciones_eliminacion_componente ::= FORMULARIO PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un formulario, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // opciones_eliminacion_componente ::= FORMULARIO error IDENTIFICADOR 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // opciones_eliminacion_componente ::= FORMULARIO error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un formulario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // opciones_eliminacion_componente ::= error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba exactamente la instrucción \"PARAMETRO\" ':' \"VALOR_A_ASIGNAR\""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_eliminacion_componente",58, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // instruccion_modificacion_componente ::= accion_modificacion_componente COMA instruccion_modificacion_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_componente",21, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // instruccion_modificacion_componente ::= accion_modificacion_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_modificacion_componente",21, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // accion_modificacion_componente ::= LLAVE_A accion_modificacion_componente_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		
                                                                                                        linea = llaAleft;
                                                                                                        columna = llaAright;
                                                                                                        String[] listaObligatorios = {"\"ID\"", "\"FORMULARIO\""};
                                                                                                        verificacionBloque(listaObligatorios, listaParametros);
                                                                                                        listaParametros.clear();
                                                                                                    
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_componente",37, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // accion_modificacion_componente ::= error accion_modificacion_componente_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_componente",37, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // accion_modificacion_componente ::= LLAVE_A accion_modificacion_componente_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_componente",37, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // accion_modificacion_componente_p ::= opciones_modificacion_componente COMA accion_modificacion_componente_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_componente_p",48, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // accion_modificacion_componente_p ::= opciones_modificacion_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_modificacion_componente_p",48, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // opciones_modificacion_componente ::= INDICE PUNTOS NUMERO 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;
		 listaParametros.add(para.toString()); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_componente",59, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // opciones_modificacion_componente ::= opciones_agregar_componente 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_componente",59, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // opciones_modificacion_componente ::= INDICE PUNTOS error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Valor inválido para ser asignado a un indice, revise si el valor a asignar contiene caracteres inválidos o si hace falta el símbolo ',' o '}' de fin de instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_componente",59, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // opciones_modificacion_componente ::= INDICE error NUMERO 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_componente",59, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // opciones_modificacion_componente ::= INDICE error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo ':' seguido de un valor válido para ser asignado a un formulario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_modificacion_componente",59, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // instruccion_consultar_datos ::= accion_consultar_datos COMA instruccion_consultar_datos 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_consultar_datos",22, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // instruccion_consultar_datos ::= accion_consultar_datos 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("instruccion_consultar_datos",22, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // accion_consultar_datos ::= LLAVE_A accion_consultar_datos_p LLAVE_C 
            {
              Object RESULT =null;
		int llaAleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).left;
		int llaAright = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).right;
		Object llaA = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)).value;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_consultar_datos",38, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // accion_consultar_datos ::= error accion_consultar_datos_p LLAVE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_consultar_datos",38, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserSolicitudes$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$ParserSolicitudes$do_action_part00000001(
    int                        CUP$ParserSolicitudes$act_num,
    java_cup.runtime.lr_parser CUP$ParserSolicitudes$parser,
    java.util.Stack            CUP$ParserSolicitudes$stack,
    int                        CUP$ParserSolicitudes$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserSolicitudes$result;

      /* select the action based on the action number */
      switch (CUP$ParserSolicitudes$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // accion_consultar_datos ::= LLAVE_A accion_consultar_datos_p error 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_consultar_datos",38, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // accion_consultar_datos_p ::= opciones_consultar_datos COMA accion_consultar_datos_p 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_consultar_datos_p",49, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // accion_consultar_datos_p ::= opciones_consultar_datos 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("accion_consultar_datos_p",49, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // opciones_consultar_datos ::= CONSULTA consulta_datos COMILLAS 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_consultar_datos",60, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // opciones_consultar_datos ::= error consulta_datos COMILLAS 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la expresion \"CONSULTA-N\" : \""); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_consultar_datos",60, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // opciones_consultar_datos ::= CONSULTA consulta_datos error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un simbolo '\"' en la instrucción"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("opciones_consultar_datos",60, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // consulta_datos ::= SELECT TO FROM FLECHA IDENTIFCONSULTA CORCHETE_A campos_posibles CORCHETE_C condicion_principal 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // consulta_datos ::= error TO FROM FLECHA IDENTIFCONSULTA CORCHETE_A campos_posibles CORCHETE_C condicion_principal 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la palabra SELECT"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // consulta_datos ::= SELECT error FROM FLECHA IDENTIFCONSULTA CORCHETE_A campos_posibles CORCHETE_C condicion_principal 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la palabra TO"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // consulta_datos ::= SELECT TO error FLECHA IDENTIFCONSULTA CORCHETE_A campos_posibles CORCHETE_C condicion_principal 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la palabra FORM"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // consulta_datos ::= SELECT TO FROM error IDENTIFCONSULTA CORCHETE_A campos_posibles CORCHETE_C condicion_principal 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la palabra ->"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // consulta_datos ::= SELECT TO FROM FLECHA error CORCHETE_A campos_posibles CORCHETE_C condicion_principal 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba UN identificador para un formulario"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // consulta_datos ::= SELECT TO FROM FLECHA IDENTIFCONSULTA error campos_posibles CORCHETE_C condicion_principal 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un símbolo '['"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // consulta_datos ::= SELECT TO FROM FLECHA IDENTIFCONSULTA CORCHETE_A campos_posibles error condicion_principal 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un símbolo ']'"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("consulta_datos",27, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-8)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // campos_posibles ::= CAMPO COMA campos_posibles 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("campos_posibles",61, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // campos_posibles ::= CAMPO 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("campos_posibles",61, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // campos_posibles ::= 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("campos_posibles",61, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // condicion_principal ::= WHERE CORCHETE_A condicion_interna 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_principal",62, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // condicion_principal ::= error CORCHETE_A condicion_interna 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba la palabra WHERE"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_principal",62, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // condicion_principal ::= WHERE error condicion_interna 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Se esperaba un símbolo '['"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_principal",62, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // condicion_principal ::= WHERE CORCHETE_A error 
            {
              Object RESULT =null;
		 listaErrores.get(punteroErrores).setDescripcion("Hubo problemas al revisar la condición de la consulta, revise los parametros"); 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_principal",62, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-2)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // condicion_interna ::= CAMPO operador valor_condicion condicion_secundaria 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_interna",63, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-3)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // condicion_secundaria ::= AND condicion_interna 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_secundaria",66, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // condicion_secundaria ::= OR condicion_interna 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_secundaria",66, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.elementAt(CUP$ParserSolicitudes$top-1)), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // condicion_secundaria ::= CORCHETE_C 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("condicion_secundaria",66, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // tipos_entrada ::= ALLCHARACTERSNOSPACE 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada",11, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // tipos_entrada ::= NUMERO 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada",11, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // tipos_entrada ::= FECHA 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada",11, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // tipos_entrada ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada",11, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // tipos_entrada ::= tipo_alineacion 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada",11, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // tipos_entrada ::= required 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada",11, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // tipos_entrada ::= theme 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada",11, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // tipos_entrada_complete ::= ALLCHARACTERSNOSPACE 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // tipos_entrada_complete ::= ALLCHARACTERS 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // tipos_entrada_complete ::= NUMERO 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // tipos_entrada_complete ::= FECHA 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // tipos_entrada_complete ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // tipos_entrada_complete ::= OPTIONS 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // tipos_entrada_complete ::= tipo_alineacion 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // tipos_entrada_complete ::= required 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // tipos_entrada_complete ::= theme 
            {
              Object RESULT =null;
		int paraleft = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).left;
		int pararight = ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()).right;
		Object para = (Object)((java_cup.runtime.Symbol) CUP$ParserSolicitudes$stack.peek()).value;
		 RESULT = para; 
              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("tipos_entrada_complete",12, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // operador ::= MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("operador",64, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // operador ::= MENOR_QUE 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("operador",64, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // operador ::= MAYOR_IGUAL 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("operador",64, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // operador ::= MENOR_IGUAL 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("operador",64, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // operador ::= DIFERENTE 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("operador",64, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // operador ::= IGUAL 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("operador",64, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // operador ::= NOT 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("operador",64, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // valor_condicion ::= NUMERO_CONSULTA 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("valor_condicion",65, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // valor_condicion ::= CADENA_CONSULTA 
            {
              Object RESULT =null;

              CUP$ParserSolicitudes$result = parser.getSymbolFactory().newSymbol("valor_condicion",65, ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserSolicitudes$stack.peek()), RESULT);
            }
          return CUP$ParserSolicitudes$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserSolicitudes$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserSolicitudes$do_action(
    int                        CUP$ParserSolicitudes$act_num,
    java_cup.runtime.lr_parser CUP$ParserSolicitudes$parser,
    java.util.Stack            CUP$ParserSolicitudes$stack,
    int                        CUP$ParserSolicitudes$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$ParserSolicitudes$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$ParserSolicitudes$do_action_part00000000(
                               CUP$ParserSolicitudes$act_num,
                               CUP$ParserSolicitudes$parser,
                               CUP$ParserSolicitudes$stack,
                               CUP$ParserSolicitudes$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$ParserSolicitudes$do_action_part00000001(
                               CUP$ParserSolicitudes$act_num,
                               CUP$ParserSolicitudes$parser,
                               CUP$ParserSolicitudes$stack,
                               CUP$ParserSolicitudes$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
